/*
 * Wazuh Vulnerability scanner - Scan Orchestrator
 * Copyright (C) 2015, Wazuh Inc.
 * February 28, 2024.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _TRAMPOLINE_SCANCONTEXT_HPP
#define _TRAMPOLINE_SCANCONTEXT_HPP

#include "scanContext.hpp"

extern std::shared_ptr<TScanContext<TrampolineOsDataCache, GlobalData, TrampolineRemediationDataCache>> spScanContext;

/**
 * @brief ScanContext structure.
 *
 * @tparam TOsDataCache os data cache type.
 */
struct TrampolineTScanContext final
{
public:
    // LCOV_EXCL_START
    /**
     * @brief Class constructor.
     *
     */
    TrampolineTScanContext() = default;
    // LCOV_EXCL_STOP

    /**
     * @brief Class constructor.
     */
    explicit TrampolineTScanContext(std::variant<const SyscollectorDeltas::Delta*,
                                                 const SyscollectorSynchronization::SyncMsg*,
                                                 const nlohmann::json*>)
    {
    }

    // LCOV_EXCL_START
    /**
     * @brief Class destructor.
     *
     */
    ~TrampolineTScanContext() = default;
    // LCOV_EXCL_STOP

    /**
     * @brief Gets scan type.
     *
     * @return Scan type.
     */
    ScannerType getType() const
    {
        return spScanContext->getType();
    }

    /**
     * @brief Gets agent id.
     * @return Agent id.
     */
    std::string_view agentId() const
    {
        return spScanContext->agentId();
    }
};

#endif // _TRAMPOLINE_SCANCONTEXT_HPP
