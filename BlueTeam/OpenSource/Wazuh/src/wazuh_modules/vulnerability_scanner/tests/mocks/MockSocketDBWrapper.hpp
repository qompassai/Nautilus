/*
 * Wazuh databaseFeedManager
 * Copyright (C) 2015, Wazuh Inc.
 * February 23, 2024.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */
#ifndef _MOCK_SOCKETDBWRAPPER_HPP
#define _MOCK_SOCKETDBWRAPPER_HPP

#include "singleton.hpp"
#include "gmock/gmock.h"
#include "gtest/gtest.h"

#include "json.hpp"

/**
 * @class MockSocketDBWrapper
 *
 * @brief Mock class for simulating a database feed manager object.
 *
 * The `MockSocketDBWrapper` class is designed to simulate the behavior of a
 * socketDBWrapper class for testing purposes. It provides mock implementations of methods and
 * allows you to set expectations on method calls and their return values for testing.
 *
 * This class is used in unit tests only to verify interactions with a content
 * register without actually performing real operations on it.
 */
class MockSocketDBWrapper : public Singleton<MockSocketDBWrapper>
{
public:
    /**
     * @brief Mock Constructor
     *
     * @note This method is intended for testing purposes and does not perform any real action.
     */
    MockSocketDBWrapper() = default;

    /**
     * @brief Mock Destructor
     *
     */
    virtual ~MockSocketDBWrapper() = default;

    /**
     * @brief Mock method for query.
     *
     * @note This method is intended for testing purposes and does not perform any real action.
     */
    MOCK_METHOD(void, query, (const std::string& query, nlohmann::json& response), ());

    /**
     * @brief Mock method for init.
     *
     * @note This method is intended for testing purposes and does not perform any real action.
     */
    MOCK_METHOD(void, init, (), ());
};

#endif // _MOCK_SOCKETDBWRAPPER_HPP
