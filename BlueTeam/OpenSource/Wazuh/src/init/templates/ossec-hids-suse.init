#!/bin/sh
#
# Copyright (C) 2015, Wazuh Inc.
# Author: Scott Knauss scott@knauss.com
#
# /etc/init.d/ossec
#
#
### BEGIN INIT INFO
# Provides:       ossec
# Required-Start: $syslog
# Required-Stop:  $null
# Default-Start:  2 3 5
# Default-Stop:   0 1 6
# Description:    Start the ossec HIDS daemon
### END INIT INFO

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
. /etc/rc.status

# First reset status of this service
rc_reset

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
#
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signalling is not supported) are
# considered a success.

# Just to make sure wazuh is installed ...
WAZUH_HOME=WAZUH_HOME_TMP
WAZUH_CONTROL="$WAZUH_HOME/bin/wazuh-control"

test -x $WAZUH_CONTROL || { echo "$WAZUH_CONTROL not installed";
    if [ "$1" = "stop" ]; then exit 0;
    else exit 5; fi; }

start() {
    ${WAZUH_CONTROL} start
}

stop() {
    ${WAZUH_CONTROL} stop
}

status() {
    ${WAZUH_CONTROL} status
}

case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
restart)
    stop
    start
    ;;
status)
    status
    ;;
*)
    echo "*** Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
