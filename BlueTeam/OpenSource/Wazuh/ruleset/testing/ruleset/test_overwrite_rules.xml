<group name="qa,test,">

  <!--
      First use case:
        Testing overwritten rules followed by child rules. See https://github.com/wazuh/wazuh/issues/13414
  -->
  <rule id="999910" level="0">
    <decoded_as>ow_test</decoded_as>
    <description>Base rule to test overwrite option.</description>
  </rule>

  <rule id="999911" level="12">
    <if_sid>999910</if_sid>
    <match>TEST 1 - rule to be overwritten</match>
    <description>Rule that will be overwritten.</description>
  </rule>

  <rule id="999912" level="12" frequency="3" timeframe="120" ignore="60">
    <if_matched_sid>999911</if_matched_sid>
    <description>Child rule.</description>
  </rule>

  <rule id="999911" level="12" overwrite="yes">
    <match>TEST 1 - rule overwritten</match>
    <description>Rule to overwrite the original.</description>
  </rule>

  <!--
    Second use case:
      Testing overwrite & if_matched_sid
      Every option apart from if_matched_sid should be overwritten
  -->

  <rule id="999913" level="7">
    <if_sid>999910</if_sid>
    <match>TEST 2 - Parent rule</match>
    <description>Parent rule</description>
  </rule>

  <rule id="999914" level="10" frequency="3" timeframe="120" ignore="60">
    <if_matched_sid>999913</if_matched_sid>
    <description>Frequency rule.</description>
  </rule>

  <rule id="999914" level="12" frequency="3" timeframe="120" ignore="60" overwrite="yes">
    <if_matched_sid>999910</if_matched_sid>
    <description>Overwrite if_matched_sid.</description>
  </rule>

  <!--
    Third use case:
      Testing overwrite & if_matched_group
      Every option apart from if_matched_group should be overwritten
  -->

  <rule id="999915" level="7">
    <if_sid>999910</if_sid>
    <match>Do not match anything</match>
    <description>Rule to create invalid_group.</description>
    <group>invalid_group</group>
  </rule>

  <rule id="999916" level="7">
    <if_sid>999910</if_sid>
    <match>TEST 3 - Parent rule</match>
    <description>Parent rule</description>
    <group>my_group</group>
  </rule>

  <rule id="999917" level="10" frequency="3" timeframe="120" ignore="60">
    <if_matched_group>my_group</if_matched_group>
    <description>Frequency rule.</description>
  </rule>

  <rule id="999917" level="12" frequency="3" timeframe="120" ignore="60" overwrite="yes">
    <if_matched_group>invalid_group</if_matched_group>
    <description>Overwrite if_matched_group.</description>
  </rule>

  <!--
    Fourth use case:
      Testing overwrite & list
  -->
  <!-- May 27 14:49:04 testUser ow_test[13244]: overwrite and list test -->
  <rule id="999918" level="5">
    <if_sid>999910</if_sid>
    <match>TEST 4 - Overwrite and list test</match>
    <description>Testing overwrite and list.</description>
  </rule>

  <!-- This rule is not loaded since the list is not found -->
  <rule id="999918" level="7" overwrite="yes">
    <match>TEST 4 - Overwrite and list test</match>
    <list field="program_name" lookup="match_key">etc/lists/black_list</list>
    <description>Overwrite and CDB list.</description>
  </rule>

  <!--
    Fifth use case:
      Testing overwrite & list & decoded_as
  -->
  <rule id="999919" level="3">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST</field>
    <description>Testing overwrite and field.</description>
  </rule>

  <rule id="999919" level="6" overwrite="yes">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST5</field>
    <description>Successfully field match.</description>
  </rule>

  <!--
    Sixth use case:
      Testing multiple overwrite
  -->
  <rule id="999920" level="3">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST</field>
    <description>Testing multiple overwrite.</description>
  </rule>

  <rule id="999920" level="3" overwrite="yes">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST</field>
    <description>Testing multiple overwrite.</description>
  </rule>

  <rule id="999920" level="3" overwrite="yes">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST</field>
    <description>Testing multiple overwrite.</description>
  </rule>

  <rule id="999920" level="3" overwrite="yes">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST</field>
    <description>Testing multiple overwrite.</description>
  </rule>

  <rule id="999920" level="3" overwrite="yes">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">MULTIPLE</field>
    <description>Testing multiple overwrite.</description>
  </rule>

  <!--
    Seventh use case:
      Testing overwrite with if_sid
  -->

  <rule id="999921" level="3">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST7</field>
    <description>Testing overwrite with if_sid.</description>
  </rule>

  <rule id="999922" level="3">
    <if_sid>999921</if_sid>
    <field name="example">TEST7</field>
    <description>Testing overwrite with if_sid.</description>
  </rule>

  <rule id="999922" level="3" overwrite="yes">
    <if_sid>999921</if_sid>
    <field name="example">TEST7</field>
    <description>Testing overwrite with if_sid.</description>
  </rule>

  <!--
    Eighth use case:
      Testing overwrite with if_sid
  -->

  <rule id="999923" level="3">
    <decoded_as>test_overwrite</decoded_as>
    <field name="example">TEST8</field>
    <description>Testing overwrite with if_level.</description>
  </rule>

  <rule id="999924" level="3">
    <if_level>3</if_level>
    <field name="example">TEST8</field>
    <description>Testing overwrite with if_level.</description>
  </rule>

  <rule id="999924" level="3" overwrite="yes">
    <if_level>3</if_level>
    <field name="example">TEST8</field>
    <description>Testing overwrite with if_level.</description>
  </rule>

</group>
