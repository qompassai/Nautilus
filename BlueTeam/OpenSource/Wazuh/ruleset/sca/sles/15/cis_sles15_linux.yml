# Security Configuration Assessment
# CIS Checks for SUSE SLES 15
# Copyright (C) 2015, Wazuh Inc.
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License (version 2) as published by the FSF - Free Software
# Foundation
#
# Based on:
# CIS Benchmark for SUSE Linux Enterprise 15 v1.1.0 - 09-17-2021

policy:
  id: "cis_sles15_linux"
  file: "cis_sles15_linux.yml"
  name: "CIS SUSE Linux Enterprise 15 Benchmark v1.1.0"
  description: "This document provides prescriptive guidance for establishing a secure configuration posture for SUSE Linux Enterprise 12 systems running on x86 and x64 platforms. This document was tested against SUSE Linux Enterprise Server 15 SP1."
  references:
    - https://www.cisecurity.org/cis-benchmarks/

requirements:
  title: "Check SUSE 15 version"
  description: "Requirements for running the SCA scan against SUSE Linux Enterprise Server 15"
  condition: all
  rules:
    - "f:/etc/os-release -> r:SUSE Linux Enterprise Server 15"

variables:
  $sshd_file: /etc/ssh/sshd_config

checks:
  # Section 1.1 - Filesystem Configuration

  # 1.1.1.1 Ensure mounting of squashfs filesystems is disabled
  - id: 21000
    title: Ensure mounting of squashfs filesystems is disabled.
    description: >
      The squashfs filesystem type is a compressed read-only Linux filesystem embedded in
      small footprint systems (similar to cramfs ). A squashfs image can be used without having
      to first decompress the image.
    rationale: >
      Removing support for unneeded filesystem types reduces the local attack surface of the
      system. If this filesystem type is not needed, disable it.
    remediation: >
      Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
      Example: vi /etc/modprobe.d/squashfs.conf
      and add the following line:
      install squashfs /bin/true

      Run the following command to unload the squashfs module:
      # modprobe -r squashfs
    compliance:
      - cis: ["1.1.1.1"]
      - cis_csc: ["5.1"]
    condition: any
    rules:
      - "c:modprobe -n -v squashfs -> r:install"
      - "c:modprobe -n -v squashfs -> r:squashfs"

  # 1.1.1.2 Ensure mounting of udf filesystems is disabled
  - id: 21001
    title: Ensure mounting of udf filesystems is disabled.
    description: >
      The udf filesystem type is the universal disk format used to implement ISO/IEC 13346 and
      ECMA-167 specifications. This is an open vendor filesystem type for data storage on a
      broad range of media. This filesystem type is necessary to support writing DVDs and newer
      optical disc formats.
    rationale: >
      Removing support for unneeded filesystem types reduces the local attack surface of the
      system. If this filesystem type is not needed, disable it.
    remediation: >
      Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
      Example: vi /etc/modprobe.d/udf.conf
      and add the following line:
      install udf /bin/true

      Run the following command to unload the udf module:
      # modprobe -r udf
    compliance:
      - cis: ["1.1.1.2"]
      - cis_csc: ["5.1"]
    condition: any
    rules:
      - "c:modprobe -n -v udf -> r:install"
      - "c:modprobe -n -v udf -> r:udf"

  # 1.1.1.3 Ensure mounting of FAT filesystems is limited - Not implemented
  # 1.1.2 Ensure /tmp is configured - Not implemented

  # 1.1.3 Ensure noexec option set on /tmp partition - Not implemented
  - id: 21002
    title: Ensure noexec option set on /tmp partition.
    description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
    rationale: >
      Since the /tmp filesystem is only intended for temporary file storage, set this option to
      ensure that users cannot run executable binaries from /tmp .
    remediation: >
      Edit the /etc/fstab file OR the /etc/systemd/system/localfs.target.wants/tmp.mount file:

      IF /etc/fstab is used to mount /tmp
      Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the /tmp
      partition. See the fstab(5) manual page for more information.
      Run the following command to remount /tmp :

      # mount -o remount,noexec /tmp

      OR
      IF systemd is used to mount /tmp:
      Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add noexec to the /tmp
      mount options:

      [Mount]
      Options=mode=1777,strictatime,noexec,nodev,nosuid

      Run the following command to restart the systemd daemon:
      # systemctl daemon-reload

      Run the following command to restart tmp.mount
      # systemctl restart tmp.mount
    compliance:
      - cis: ["1.1.3"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - 'c:mount -> r:\s/tmp\s && r:noexec'

  # 1.1.4 Ensure nodev option set on /tmp partition
  - id: 21003
    title: Ensure nodev option set on /tmp partition.
    description: The nodev mount option specifies that the filesystem cannot contain special devices.
    rationale: >
      Since the /tmp filesystem is not intended to support devices, set this option to ensure that
      users cannot attempt to create block or character special devices in /tmp .
    remediation: >
      Edit the /etc/fstab file OR the /etc/systemd/system/localfs.target.wants/tmp.mount file:
      IF /etc/fstab is used to mount /tmp:
      Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /tmp
      partition. See the fstab(5) manual page for more information.
      Run the following command to remount /tmp :
      # mount -o remount,nodev /tmp
      OR
      IF systemd is used to mount /tmp:
      Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nodev to the /tmp
      mount options:
      [Mount]
      Options=mode=1777,strictatime,noexec,nodev,nosuid
      Run the following command to restart the systemd daemon:
      # systemctl daemon-reload

      Run the following command to restart tmp.mount
      # systemctl restart tmp.mount
    compliance:
      - cis: ["1.1.4"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:mount -> r:\s/tmp\s && r:nodev'

  # 1.1.5 Ensure nosuid option set on /tmp partition
  - id: 21004
    title: Ensure nosuid option set on /tmp partition.
    description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
    rationale: >
      Since the /tmp filesystem is only intended for temporary file storage, set this option to
      ensure that users cannot create setuid files in /tmp.
    remediation: >
      IF /etc/fstab is used to mount /tmp
      Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the /tmp
      partition. See the fstab(5) manual page for more information.
      Run the following command to remount /tmp :
      # mount -o remount,nosuid /tmp

      OR
      IF systemd is used to mount /tmp:
      Edit /etc/systemd/system/local-fs.target.wants/tmp.mount to add nosuid to the /tmp
      mount options:
      [Mount]
      Options=mode=1777,strictatime,noexec,nodev,nosuid

      Run the following command to restart the systemd daemon:
      # systemctl daemon-reload

      Run the following command to restart tmp.mount:
      # systemctl restart tmp.mount
    compliance:
      - cis: ["1.1.5"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s/tmp\s && r:nosuid'

  # 1.1.6 Ensure /dev/shm is configured
  - id: 21005
    title: Ensure /dev/shm is configured.
    description: >
      /dev/shm is a traditional shared memory concept. One program will create a memory
      portion, which other processes (if permitted) can access. If /dev/shm is not configured,
      tmpfs will be mounted to /dev/shm by systemd.

      Notes:
        - An entry for /dev/shm in /etc/fstab will take precedence.
        - tmpfs can be resized using the size={size} parameter in /etc/fstab. If we don't specify
          the size, it will be half the RAM.

      Resize tmpfs example:
      tmpfs /dev/shm tmpfs defaults,noexec,nodev,nosuid,size=2G 0 0
    rationale: >
      Any user can upload and execute files inside the /dev/shm similar to the /tmp partition.
      Configuring /dev/shm allows an administrator to set the noexec option on the mount,
      making /dev/shm useless for an attacker to install executable code. It would also prevent an
      attacker from establishing a hardlink to a system setuid program and wait for it to be
      updated. Once the program was updated, the hardlink would be broken and the attacker
      would have his own copy of the program. If the program happened to have a security
      vulnerability, the attacker could continue to exploit the known flaw.
    remediation: >
      Edit /etc/fstab and add or edit the following line:
      tmpfs /dev/shm tmpfs defaults,noexec,nodev,nosuid 0 0

      Run the following command to remount /dev/shm:
      # mount -o remount,noexec,nodev,nosuid /dev/shm
    compliance:
      - cis: ["1.1.6"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\.+\s+/dev/shm\s+'
      - 'f:/etc/fstab -> r:\.+\s+/dev/shm\s+'

  # 1.1.7 Ensure noexec option set on /dev/shm partition
  - id: 21006
    title: Ensure noexec option set on /dev/shm partition.
    description: >
      The noexec mount option specifies that the filesystem cannot contain executable binaries.
      Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to
      /etc/fstab to add mount options even though it is already being mounted on boot.
    rationale: >
      Setting this option on a file system prevents users from executing programs from shared
      memory. This deters users from introducing potentially malicious software on the system.
    remediation: >
      Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
      /dev/shm partition. See the fstab(5) manual page for more information.

      Run the following command to remount /dev/shm:
      # mount -o remount,noexec,nodev,nosuid /dev/shm
    compliance:
      - cis: ["1.1.7"]
      - cis_csc: ["2.6", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s/dev/shm\s && r:noexec'

  # 1.1.8 Ensure nodev option set on /dev/shm partition - Not implemented

  # 1.1.9 Ensure nosuid option set on /dev/shm partition
  - id: 21007
    title: Ensure nosuid option set on /dev/shm partition.
    description: >
      The nosuid mount option specifies that the filesystem cannot contain setuid files.
      Note: /dev/shm is mounted automatically by systemd. /dev/shm needs to be added to
      /etc/fstab to add mount options even though it is already being mounted on boot.
    rationale: >
      Setting this option on a file system prevents users from introducing privileged programs
      onto the system and allowing non-root users to execute them.
    remediation: >
      Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
      /dev/shm partition. See the fstab(5) manual page for more information.

      Run the following command to remount /dev/shm:
      # mount -o remount,noexec,nodev,nosuid /dev/shm
    compliance:
      - cis: ["1.1.9"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s/dev/shm\s && r:nosuid'

  # 1.1.10 Ensure separate partition exists for /var
  - id: 21008
    title: Ensure separate partition exists for /var.
    description: >
      The /var directory is used by daemons and other system services to temporarily store
      dynamic data. Some directories created by these processes may be world-writable.

      Note: When modifying /var it is advisable to bring the system to emergency mode (so auditd
      is not running), rename the existing directory, mount the new file system, and migrate the
      data over before returning to multiuser mode.
    rationale: >
      Since the /var directory may contain world-writable files and directories, there is a risk of
      resource exhaustion if it is not bound to a separate partition.
    remediation: >
      For new installations, during installation create a custom partition setup and specify a
      separate partition for /var .
      For systems that were previously installed, create a new partition and configure
      /etc/fstab as appropriate.
    compliance:
      - cis: ["1.1.10"]
      - cis_csc: ["5.1"]
    references:
      - AJ Lewis, "LVM HOWTO", http://tldp.org/HOWTO/LVM-HOWTO/
    condition: all
    rules:
      - 'c:mount -> r:\s/var\s'

  # 1.1.11 Ensure separate partition exists for /var/tmp
  - id: 21009
    title: Ensure separate partition exists for /var/tmp.
    description: >
      The /var/tmp directory is a world-writable directory used for temporary storage by all
      users and some applications and is intended for temporary files that are preserved across
      reboots.

      Note: tmpfs should not be used for /var/tmp/. tmpfs is a temporary filesystem that resides in
      memory and/or swap partition(s). Files in tmpfs are automatically cleared at each bootup.
    rationale: >
      Since the /var/tmp directory is intended to be world-writable, there is a risk of resource
      exhaustion if it is not bound to a separate partition. In addition, making /var/tmp its own
      file system allows an administrator to set the noexec option on the mount, making
      /var/tmp useless for an attacker to install executable code. It would also prevent an
      attacker from establishing a hardlink to a system setuid program and wait for it to be
      updated. Once the program was updated, the hardlink would be broken and the attacker
      would have his own copy of the program. If the program happened to have a security
      vulnerability, the attacker could continue to exploit the known flaw.
    remediation: >
      For new installations, during installation create a custom partition setup and specify a
      separate partition for /var/tmp .
      For systems that were previously installed, create a new partition and configure
      /etc/fstab as appropriate.
    compliance:
      - cis: ["1.1.11"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s/var/tmp\s'

  # 1.1.12 Ensure noexec option set on /var/tmp partition
  - id: 21010
    title: Ensure noexec option set on /var/tmp partition.
    description: The noexec mount option specifies that the filesystem cannot contain executable binaries.
    rationale: >
      Since the /var/tmp filesystem is only intended for temporary file storage, set this option to
      ensure that users cannot run executable binaries from /var/tmp .
    remediation: >
      Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
      /var/tmp partition. See the fstab(5) manual page for more information.

      Run the following command to remount /var/tmp :
      # mount -o remount,noexec /var/tmp
    compliance:
      - cis: ["1.1.12"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - 'c:mount -> r:\s/var/tmp\s && r:noexec'

  # 1.1.13 Ensure nodev option set on /var/tmp partition
  - id: 21011
    title: Ensure nodev option set on /var/tmp partition.
    description: The nodev mount option specifies that the filesystem cannot contain special devices.
    rationale: >
      Since the /var/tmp filesystem is not intended to support devices, set this option to ensure
      that users cannot attempt to create block or character special devices in /var/tmp .
    remediation: >
      Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
      /var/tmp partition. See the fstab(5) manual page for more information.

      Run the following command to remount /var/tmp :
      # mount -o remount,nodev /var/tmp
    compliance:
      - cis: ["1.1.13"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s+/var/tmp\s+ && r:nodev'

  # 1.1.14 Ensure nosuid option set on /var/tmp partition
  - id: 21012
    title: Ensure nosuid option set on /var/tmp partition.
    description: The nosuid mount option specifies that the filesystem cannot contain setuid files.
    rationale: >
      Since the /var/tmp filesystem is only intended for temporary file storage, set this option to
      ensure that users cannot create setuid files in /var/tmp
    remediation: >
      Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
      /var/tmp partition. See the fstab(5) manual page for more information.

      Run the following command to remount /var/tmp :
      # mount -o remount,nosuid /var/tmp
    compliance:
      - cis: ["1.1.14"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s+/var/tmp\s+ && r:nosuid'

  # 1.1.15 Ensure separate partition exists for /var/log
  - id: 21013
    title: Ensure separate partition exists for /var/log.
    description: The /var/log directory is used by system services to store log data.
    rationale: >
      There are two important reasons to ensure that system logs are stored on a separate
      partition: protection against resource exhaustion (since logs can grow quite large) and
      protection of audit data.

      Note: When modifying /var/log it is advisable to bring the system to emergency mode (so
      auditd is not running), rename the existing directory, mount the new file system, and migrate
      the data over before returning to multiuser mode.
    remediation: >
      For new installations, during installation create a custom partition setup and specify a
      separate partition for /var/log .
      For systems that were previously installed, create a new partition and configure
      /etc/fstab as appropriate.
    compliance:
      - cis: ["1.1.15"]
      - cis_csc: ["6.4"]
    references:
      - AJ Lewis, "LVM HOWTO", http://tldp.org/HOWTO/LVM-HOWTO/
    condition: all
    rules:
      - 'c:mount -> r:\s/var/log\s'

  # 1.1.16 Ensure separate partition exists for /var/log/audit
  - id: 21014
    title: Ensure separate partition exists for /var/log/audit.
    description: >
      The auditing daemon, auditd , stores log data in the /var/log/audit directory.

      Note: When modifying /var/log/audit it is advisable to bring the system to emergency mode
      (so auditd is not running), rename the existing directory, mount the new file system, and
      migrate the data over before returning to multiuser mode.
    rationale: >
      There are two important reasons to ensure that data gathered by auditd is stored on a
      separate partition: protection against resource exhaustion (since the audit.log file can
      grow quite large) and protection of audit data. The audit daemon calculates how much free
      space is left and performs actions based on the results. If other processes (such as syslog )
      consume space in the same partition as auditd , it may not perform as desired.
    remediation: >
      For new installations, during installation create a custom partition setup and specify a
      separate partition for /var/log/audit .
      For systems that were previously installed, create a new partition and configure
      /etc/fstab as appropriate.
    compliance:
      - cis: ["1.1.16"]
      - cis_csc: ["6.4"]
    references:
      - AJ Lewis, "LVM HOWTO", http://tldp.org/HOWTO/LVM-HOWTO/
    condition: all
    rules:
      - 'c:mount -> r:\s/var/log/audit\s'

  # 1.1.17 Ensure separate partition exists for /home
  - id: 21015
    title: Ensure separate partition exists for /home.
    description: The /home directory is used to support disk storage needs of local users.
    rationale: >
      If the system is intended to support local users, create a separate partition for the /home
      directory to protect against resource exhaustion and restrict the type of files that can be
      stored under /home .
    remediation: >
      For new installations, during installation create a custom partition setup and specify a
      separate partition for /home .
      For systems that were previously installed, create a new partition and configure
      /etc/fstab as appropriate.
    compliance:
      - cis: ["1.1.17"]
      - cis_csc: ["5.1", "13"]
    references:
      - AJ Lewis, "LVM HOWTO", http://tldp.org/HOWTO/LVM-HOWTO/
    condition: all
    rules:
      - 'c:mount -> r:\s/home\s'

  # 1.1.18 Ensure nodev option set on /home partition
  - id: 21016
    title: Ensure nodev option set on /home partition.
    description: >
      The nodev mount option specifies that the filesystem cannot contain special devices.
      Note: The actions in this recommendation refer to the /home partition, which is the default
      user partition. If you have created other user partitions, it is recommended that the
      Remediation and Audit steps be applied to these partitions as well.
    rationale: >
      Since the user partitions are not intended to support devices, set this option to ensure that
      users cannot attempt to create block or character special devices.
    remediation: >
      Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the /home
      partition. See the fstab(5) manual page for more information.

      Run the following command to remount /home/ with the nodev mount option:
      # mount -o remount,nodev /home
    compliance:
      - cis: ["1.1.18"]
      - cis_csc: ["5.1", "13"]
    condition: all
    rules:
      - 'c:mount -> r:\s/home\s && r:nodev'

  # 1.1.19 Ensure noexec option set on removable media partitions - Not implemented
  # 1.1.20 Ensure nodev option set on removable media partitions - Not implemented
  # 1.1.21 Ensure nosuid option set on removable media partitions - Not implemented
  # 1.1.22 Ensure sticky bit is set on all world-writable directories - Not implemented

  # 1.1.23 Disable Automounting
  - id: 21017
    title: Disable Automounting.
    description: >
      autofs allows automatic mounting of devices, typically including CD/DVDs and USB drives.
      Notes:
        - Additional methods of disabling a service exist. Consult your distribution
          documentation for appropriate methods.
        - This control should align with the tolerance of the use of portable drives and optical
          media in the organization.
          - On a server requiring an admin to manually mount media can be part of
            defense-in-depth to reduce the risk of unapproved software or information
            being introduced or proprietary software or information being exfiltrated.
          - If admins commonly use flash drives and Server access has sufficient physical
            controls, requiring manual mounting may not increase security.
    rationale: >
      With automounting enabled anyone with physical access could attach a USB drive or disc
      and have its contents available in system even if they lacked permissions to mount it
      themselves.
    remediation: >
      Run the following command to mask autofs:
      # systemctl --now mask autofs
    compliance:
      - cis: ["1.1.23"]
      - cis_csc: ["8.4", "8.5"]
    condition: none
    rules:
      - "c:systemctl is-enabled autofs -> r:enabled"

  # 1.2.1 Ensure GPG keys are configured - Not implemented
  # 1.2.2 Ensure package manager repositories are configured - Not implemented
  # 1.2.3 Ensure gpgcheck is globally activated - Not implemented

  # 1.3.1 Ensure sudo is installed
  - id: 21018
    title: Ensure sudo is installed.
    description: >
      sudo allows a permitted user to execute a command as the superuser or another user, as
      specified by the security policy. The invoking user's real (not effective) user ID is used to
      determine the user name with which to query the security policy.
    rationale: >
      sudo supports a plugin architecture for security policies and input/output logging. Third
      parties can develop and distribute their own policy and I/O logging plugins to work
      seamlessly with the sudo front end. The default security policy is sudoers, which is
      configured via the file /etc/sudoers.

      The security policy determines what privileges, if any, a user has to run sudo. The policy
      may require that users authenticate themselves with a password or another authentication
      mechanism. If authentication is required, sudo will exit if the user's password is not
      entered within a configurable time limit. This limit is policy-specific.
    remediation: >
      Run the following command to install sudo.
      # zypper install sudo
    compliance:
      - cis: ["1.3.1"]
      - cis_csc: ["4"]
    references:
      - SUDO(8)
    condition: none
    rules:
      - "c:rpm -q sudo -> r:not installed"

  # 1.3.2 Ensure sudo commands use pty
  - id: 21019
    title: Ensure sudo commands use pty.
    description: >
      sudo can be configured to run only from a pseudo-pty

      Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the
      sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks for
      parse errors. If the sudoers file is currently being edited you will receive a message to try
      again later. The -f option allows you to tell visudo which file to edit.
    rationale: >
      Attackers can run a malicious program using sudo, which would again fork a background
      process that remains even when the main program has finished executing.
      This can be mitigated by configuring sudo to run other commands only from a pseudo-pty,
      whether I/O logging is turned on or not.
    remediation: >
      Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH
      TO FILE> and add the following line:

      Defaults use_pty
    compliance:
      - cis: ["1.3.2"]
      - cis_csc: ["4"]
    references:
      - SUDO(8)
    condition: all
    rules:
      - 'c:grep -REsih "^Defaults" /etc/sudoers /etc/sudoers.d -> r:^\wefaults\s+use_pty'

  # 1.3.3 Ensure sudo log file exists
  - id: 21020
    title: Ensure sudo log file exists.
    description: >
      sudo can use a custom log file

      Note: visudo edits the sudoers file in a safe fashion, analogous to vipw(8). visudo locks the
      sudoers file against multiple simultaneous edits, provides basic sanity checks, and checks
      for parse errors. If the sudoers file is currently being edited you will receive a message to
      try again later. The -f option allows you to tell visudo which file to edit.
    rationale: A sudo log file simplifies auditing of sudo commands
    remediation: >
      edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f <PATH
      TO FILE> and add the following line:
      Defaults logfile="<PATH TO CUSTOM LOG FILE>"

      Example
      Defaults logfile="/var/log/sudo.log"
    compliance:
      - cis: ["1.3.3"]
      - cis_csc: ["6.3"]
    references:
      - SUDO(8)
      - VISUDO(8)
    condition: all
    rules:
      - 'c:grep -REsih "^Defaults" /etc/sudoers /etc/sudoers.d -> r:^\wefaults\s+logfile="\.+"'

  # 1.4.1 Ensure AIDE is installed
  - id: 21021
    title: Ensure AIDE is installed.
    description: >
      AIDE takes a snapshot of filesystem state including modification times, permissions, and
      file hashes which can then be used to compare against the current state of the filesystem to
      detect modifications to the system.

      Note: The prelinking feature can interfere with AIDE because it alters binaries to speed up
      their start up times. Run prelink -ua to restore the binaries to their prelinked state, thus
      avoiding false positives from AIDE.
    rationale: >
      By monitoring the filesystem state compromised files can be detected to prevent or limit
      the exposure of accidental or malicious misconfigurations or modified binaries.
    remediation: >
      Configure AIDE as appropriate for your environment. Consult the AIDE documentation for
      options.
      Run the following command to install AIDE:
      # zypper install aide

      Run the following commands to initialize AIDE:
      # aide --init
      # mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
    compliance:
      - cis: ["1.4.1"]
      - cis_csc: ["14.9"]
    references:
      - AIDE stable manual: http://aide.sourceforge.net/stable/manual.html
    condition: none
    rules:
      - "c:rpm -q aide -> r:not installed"

  # 1.4.2 Ensure filesystem integrity is regularly checked - Not implemented

  # 1.5.1 Ensure bootloader password is set
  - id: 21022
    title: Ensure bootloader password is set.
    description: >
      Setting the boot loader password will require that anyone rebooting the system must enter
      a password before being able to set command line boot parameters

      Notes:
        - This recommendation is designed around the grub2 bootloader, if LILO or another
          bootloader is in use in your environment enact equivalent settings. Replace
          `/boot/grub2/grub.cfg with the appropriate grub configuration file for your
          environment
        - The information can be placed in any /etc/grub.d file as long as that file is
          incorporated into grub.cfg
          - The superuser/user information and password should not be contained in the
            /etc/grub.d/00_header file.
          - A custom file, such as /etc/grub.d/40_custom should be used so it is not
            overwritten should the Grub package be updated.
    rationale: >
      Requiring a boot password upon execution of the boot loader will prevent an unauthorized
      user from entering boot parameters or changing the boot partition. This prevents users
      from weakening security (e.g. turning off SELinux at boot time).
    remediation: >
      Create an encrypted password with grub2-mkpasswd-pbkdf2:
        # grub2-mkpasswd-pbkdf2
        Enter password: <password>
        Reenter password: <password>
        Your PBKDF2 is <encrypted-password>

      Add the following into /etc/grub.d/40_custom
        set superusers="<username>"
        password_pbkdf2 <username> <encrypted-password>

      Run the following command to update the grub2 configuration:
        # grub2-mkconfig -o /boot/grub2/grub.cfg
    compliance:
      - cis: ["1.5.1"]
      - cis_csc: ["5.1"]
    references:
      - https://documentation.suse.com/sles/15-SP1/html/SLES-all/cha-grub2.html
    condition: all
    rules:
      - 'f:/boot/grub2/grub.cfg -> r:^\s*set superusers'
      - 'f:/boot/grub2/grub.cfg -> r:^\s*password'

  # 1.5.2 Ensure permissions on bootloader config are configured
  - id: 21023
    title: Ensure permissions on bootloader config are configured.
    description: >
      The grub configuration file contains information on boot settings and passwords for
      unlocking boot options. The grub2 configuration is usually grub.cfg stored in
      /boot/grub2/.

      Notes:
        - This recommendation is designed around the grub2 bootloader.
        - If LILO or another bootloader is in use in your environment:
          - Enact equivalent settings
          - Replace /boot/grub2/grub.cfg and /boot/grub2/user.cfg with the
            appropriate boot configuration files for your environment
    rationale: >
      Setting the permissions to read and write for root only prevents non-root users from
      seeing the boot parameters or changing them. Non-root users who read the boot
      parameters may be able to identify weaknesses in security upon boot and be able to exploit
      them.
    remediation: >
      Run the following commands to set ownership and permissions on your grub
      configuration:
      # chown root:root /boot/grub2/grub.cfg
      # chmod og-rwx /boot/grub2/grub.cfg
    compliance:
      - cis: ["1.5.2"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:stat -L /boot/grub2/grub.cfg -> r:^Access:\s*\(0600/-rw-------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 1.5.3 Ensure authentication required for single user mode
  - id: 21024
    title: Ensure authentication required for single user mode.
    description: >
      Single user mode (rescue mode) is used for recovery when the system detects an issue
      during boot or by manual selection from the bootloader.
    rationale: >
      Requiring authentication in single user mode (rescue mode) prevents an unauthorized user
      from rebooting the system into single user to gain root privileges without credentials.
    remediation: >
      Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:
      ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

      Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:
      ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency
    compliance:
      - cis: ["1.5.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'f:/usr/lib/systemd/system/rescue.service -> r:^ExecStart=\.*/systemd/systemd-sulogin-shell\s+rescue'
      - 'f:/usr/lib/systemd/system/emergency.service -> r:^ExecStart=\.*/systemd/systemd-sulogin-shell\s+emergency'

  # 1.6.1 Ensure core dumps are restricted
  - id: 21025
    title: Ensure core dumps are restricted.
    description: >
      A core dump is the memory of an executable program. It is generally used to determine
      why a program aborted. It can also be used to glean confidential information from a core
      file. The system provides the ability to set a soft limit for core dumps, but this can be
      overridden by the user.
    rationale: >
      Setting a hard limit on core dumps prevents users from overriding the soft variable. If core
      dumps are required, consider setting limits for user groups (see limits.conf(5) ). In
      addition, setting the fs.suid_dumpable variable to 0 will prevent setuid programs from
      dumping core.
    remediation: >
      Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/*
      file:
      * hard core 0

      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      fs.suid_dumpable = 0

      Run the following command to set the active kernel parameter:
      # sysctl -w fs.suid_dumpable=0

      If systemd-coredump is installed:
      edit /etc/systemd/coredump.conf and add/modify the following lines:
      Storage=none
      ProcessSizeMax=0

      Run the command:
      systemctl daemon-reload
    compliance:
      - cis: ["1.6.1"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:grep -Rh ^*[[:space:]]*hard[[:space:]][[:space:]]*core[[:space:]][[:space:]]* /etc/security/limits.conf /etc/security/limits.d -> r:\s*\t*0$'
      - 'c:sysctl fs.suid_dumpable -> r:\s0$'
      - 'c:grep -Rh fs\.suid_dumpable /etc/sysctl.conf /etc/sysctl.d -> r:^\s*fs.suid_dumpable\s*=\s*0\s*$'

  # 1.6.2 Ensure XD/NX support is enabled
  - id: 21026
    title: Ensure XD/NX support is enabled.
    description: >
      Recent processors in the x86 family support the ability to prevent code execution on a per
      memory page basis. Generically and on AMD processors, this ability is called No Execute
      (NX), while on Intel processors it is called Execute Disable (XD). This ability can help
      prevent exploitation of buffer overflow vulnerabilities and should be activated whenever
      possible. Extra steps must be taken to ensure that this protection is enabled, particularly on
      32-bit x86 systems. Other processors, such as Itanium and POWER, have included such
      support since inception and the standard kernel for those platforms supports the feature.
    rationale: >
      Enabling any feature that can protect against buffer overflow attacks enhances the security
      of the system.

      Note: Ensure your system supports the XD or NX bit and has PAE support before implementing
      this recommendation as this may prevent it from booting if these are not supported by your
      hardware.
    remediation: >
      On 32 bit systems install a kernel with PAE support, no installation is required on 64 bit
      systems:
      If necessary configure your bootloader to load the new kernel and reboot the system.
      You may need to enable NX or XD support in your bios.
    compliance:
      - cis: ["1.6.2"]
      - cis_csc: ["8.3"]
    condition: all
    rules:
      - 'c:sh -c "journalctl | grep \"protection: active\"" -> r:\.*kernel: NX \(Execute Disable\) protection:\s*active'

  # 1.6.3 Ensure address space layout randomization (ASLR) is enabled
  - id: 21027
    title: Ensure address space layout randomization (ASLR) is enabled.
    description: >
      Address space layout randomization (ASLR) is an exploit mitigation technique which
      randomly arranges the address space of key data areas of a process.
    rationale: >
      Randomly placing virtual memory regions will make it difficult to write memory page
      exploits as the memory placement will be consistently shifting.
    remediation: >
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      kernel.randomize_va_space = 2

      Run the following command to set the active kernel parameter:
      # sysctl -w kernel.randomize_va_space=2
    compliance:
      - cis: ["1.6.3"]
      - cis_csc: ["8.3"]
    condition: all
    rules:
      - 'c:grep -Rh ^kernel\.randomize_va_space /etc/sysctl.conf /etc/sysctl.d -> r:^\s*kernel.randomize_va_space\s*=\s*2$'
      - 'c:sysctl kernel.randomize_va_space -> r:\s2$|\t2$'

  # 1.6.4 Ensure prelink is disabled
  - id: 21028
    title: Ensure prelink is disabled.
    description: >
      prelinkis a program that modifies ELF shared libraries and ELF dynamically linked
      binaries in such a way that the time needed for the dynamic linker to perform relocations
      at startup significantly decreases.
    rationale: >
      The prelinking feature can interfere with the operation of AIDE, because it changes
      binaries. Prelinking can also increase the vulnerability of the system if a malicious user is
      able to compromise a common library such as libc.
    remediation: >
      Run the following command to restore binaries to normal:
      # prelink -ua

      Run the following command to uninstall prelink:
      # zypper remove prelink
    compliance:
      - cis: ["1.6.4"]
      - cis_csc: ["14.9"]
    condition: all
    rules:
      - "c:rpm -q prelink -> r:not installed"

  # 1.7.1.1 Ensure AppArmor is installed
  - id: 21029
    title: Ensure AppArmor is installed.
    description: AppArmor provides Mandatory Access Controls.
    rationale: >
      Without a Mandatory Access Control system installed only the default Discretionary Access
      Control system will be available.
    remediation: >
      Run the following command to install AppArmor:
      # zypper install -t pattern apparmor
    compliance:
      - cis: ["1.7.1.1"]
      - cis_csc: ["14.6"]
    condition: none
    rules:
      - "c:rpm -q apparmor-docs -> r:not installed"
      - "c:rpm -q apparmor-parser -> r:not installed"
      - "c:rpm -q apparmor-profiles -> r:not installed"
      - "c:rpm -q apparmor-utils -> r:not installed"
      - "c:rpm -q libapparmor1 -> r:not installed"

  # 1.7.1.2 Ensure AppArmor is enabled in the bootloader configuration - Not implemented
  # 1.7.1.3 Ensure all AppArmor Profiles are in enforce or complain mode - Not implemented
  # 1.7.1.4 Ensure all AppArmor Profiles are enforcing - Not implemented

  # 1.8.1.1 Ensure message of the day is configured properly
  - id: 21030
    title: Ensure message of the day is configured properly.
    description: >
      The contents of the /etc/motd file are displayed to users after login and function as a
      message of the day for authenticated users.

      Unix-based systems have typically displayed information about the OS release and patch
      level upon logging in to the system. This information can be useful to developers who are
      developing software for a particular OS platform. If mingetty(8) supports the following
      options, they display operating system information: \m - machine architecture \r -
      operating system release \s - operating system name \v - operating system version
    rationale: >
      Warning messages inform users who are attempting to login to the system of their legal
      status regarding the system and must include the name of the organization that owns the
      system and any monitoring policies that are in place. Displaying OS and patch level
      information in login banners also has the side effect of providing detailed system
      information to attackers attempting to target specific exploits of a system. Authorized users
      can easily get this information by running the " uname -a " command once they have logged
      in.
    remediation: >
      Edit the /etc/motd file with the appropriate contents according to your site policy, remove
      any instances of \m , \r , \s , \v or references to the OS platform

      OR

      If the motd is not used, this file can be removed.
      Run the following command to remove the motd file:
      # rm /etc/motd
    compliance:
      - cis: ["1.8.1.1"]
      - cis_csc: ["5.1"]
    condition: none
    rules:
      - 'f:/etc/motd -> r:\\m'
      - 'f:/etc/motd -> r:\\r'
      - 'f:/etc/motd -> r:\\s'
      - 'f:/etc/motd -> r:\\v'

  # 1.8.1.2 Ensure local login warning banner is configured properly
  - id: 21031
    title: Ensure local login warning banner is configured properly.
    description: >
      The contents of the /etc/issue file are displayed to users prior to login for local terminals.
      Unix-based systems have typically displayed information about the OS release and patch
      level upon logging in to the system. This information can be useful to developers who are
      developing software for a particular OS platform. If mingetty(8) supports the following
      options, they display operating system information: \m - machine architecture \r -
      operating system release \s - operating system name \v - operating system version - or the
      operating system's name
    rationale: >
      Warning messages inform users who are attempting to login to the system of their legal
      status regarding the system and must include the name of the organization that owns the
      system and any monitoring policies that are in place. Displaying OS and patch level
      information in login banners also has the side effect of providing detailed system
      information to attackers attempting to target specific exploits of a system. Authorized users
      can easily get this information by running the " uname -a " command once they have logged
      in.
    remediation: >
      Edit the /etc/issue file with the appropriate contents according to your site policy,
      remove any instances of \m , \r , \s , \v or references to the OS platform
      # echo "Authorized uses only. All activity may be monitored and reported." >
      /etc/issue
    compliance:
      - cis: ["1.8.1.2"]
      - cis_csc: ["5.1"]
    condition: none
    rules:
      - 'f:/etc/issue -> r:\\m'
      - 'f:/etc/issue -> r:\\r'
      - 'f:/etc/issue -> r:\\s'
      - 'f:/etc/issue -> r:\\v'

  # 1.8.1.3 Ensure remote login warning banner is configured properly
  - id: 21032
    title: Ensure remote login warning banner is configured properly.
    description: >
      The contents of the /etc/issue.net file are displayed to users prior to login for remote
      connections from configured services.
      Unix-based systems have typically displayed information about the OS release and patch
      level upon logging in to the system. This information can be useful to developers who are
      developing software for a particular OS platform. If mingetty(8) supports the following
      options, they display operating system information: \m - machine architecture \r -
      operating system release \s - operating system name \v - operating system version
    rationale: >
      Warning messages inform users who are attempting to login to the system of their legal
      status regarding the system and must include the name of the organization that owns the
      system and any monitoring policies that are in place. Displaying OS and patch level
      information in login banners also has the side effect of providing detailed system
      information to attackers attempting to target specific exploits of a system. Authorized users
      can easily get this information by running the " uname -a " command once they have logged
      in.
    remediation: >
      Edit the /etc/issue.net file with the appropriate contents according to your site policy,
      remove any instances of \m , \r , \s , \v or references to the OS platform
      # echo "Authorized uses only. All activity may be monitored and reported." >
      /etc/issue.net
    compliance:
      - cis: ["1.8.1.3"]
      - cis_csc: ["5.1"]
    condition: none
    rules:
      - 'f:/etc/issue.net -> r:\\m'
      - 'f:/etc/issue.net -> r:\\r'
      - 'f:/etc/issue.net -> r:\\s'
      - 'f:/etc/issue.net -> r:\\v'

  # 1.8.1.4 Ensure permissions on /etc/motd are configured
  - id: 21033
    title: Ensure permissions on /etc/motd are configured.
    description: >
      The contents of the /etc/motd file are displayed to users after login and function as a
      message of the day for authenticated users.
    rationale: >
      If the /etc/motd file does not have the correct ownership it could be modified by
      unauthorized users with incorrect or misleading information.
    remediation: >
      Run the following commands to set permissions on /etc/motd :
      # chown root:root /etc/motd
      # chmod u-x,go-wx /etc/motd
    compliance:
      - cis: ["1.8.1.4"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/motd -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 1.8.1.5 Ensure permissions on /etc/issue are configured
  - id: 21034
    title: Ensure permissions on /etc/issue are configured.
    description: >
      The contents of the /etc/issue file are displayed to users prior to login for local terminals.
    rationale: >
      If the /etc/issue file does not have the correct ownership it could be modified by
      unauthorized users with incorrect or misleading information.
    remediation: >
      Run the following commands to set permissions on /etc/issue:
      # chown root:root /etc/issue
      # chmod u-x,go-wx /etc/issue
    compliance:
      - cis: ["1.8.1.5"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/issue -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 1.8.1.6 Ensure permissions on /etc/issue.net are configured
  - id: 21035
    title: Ensure permissions on /etc/issue.net are configured.
    description: >
      The contents of the /etc/issue.net file are displayed to users prior to login for remote
      connections from configured services.
    rationale: >
      If the /etc/issue.net file does not have the correct ownership it could be modified by
      unauthorized users with incorrect or misleading information.
    remediation: >
      Run the following commands to set permissions on /etc/issue.net:
      # chown root:root /etc/issue.net
      # chmod u-x,go-wx /etc/issue.net
    compliance:
      - cis: ["1.8.1.6"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/issue.net -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 1.9 Ensure updates, patches, and additional security software are installed - Not implemented
  # 1.10 Ensure GDM is removed or login is configured - Not implemented

  # 2.1.1 Ensure xinetd is not installed
  - id: 21036
    title: Ensure xinetd is not installed.
    description: >
      The eXtended InterNET Daemon ( xinetd ) is an open source super daemon that replaced
      the original inetd daemon. The xinetd daemon listens for well known services and
      dispatches the appropriate daemon to properly respond to service requests.
    rationale: >
      If there are no xinetd services required, it is recommended that the package be removed to
      reduce the attack surface are of the system.

      Note: If an xinetd service or services are required, ensure that any xinetd service not required
      is stopped and disabled
    remediation: >
      Run the following command to remove xinetd:
      # zypper remove xinetd
    compliance:
      - cis: ["2.1.1"]
      - cis_csc: ["2.6", "9.2"]
    condition: all
    rules:
      - "c:rpm -q xinetd -> r:not installed"

  # 2.2.1.1 Ensure time synchronization is in use - Not implemented
  # 2.2.1.2 Ensure systemd-timesyncd is configured - Not implemented

  # 2.2.1.3 Ensure chrony is configured
  - id: 21037
    title: Ensure chrony is configured.
    description: >
      chrony is a daemon which implements the Network Time Protocol (NTP) and is designed to
      synchronize system clocks across a variety of systems and use a source that is highly
      accurate. More information on chrony can be found at: http://chrony.tuxfamily.org/.
      chrony can be configured to be a client and/or a server.
    rationale: >
      If chrony is in use on the system proper configuration is vital to ensuring time
      synchronization is working properly.

      Note: This recommendation only applies if chrony is in use on the system. If another method of
      time synchronization is in use on the system, this recommendation can be skipped.
    remediation: >
      Add or edit server or pool lines to /etc/chrony.conf as appropriate:
      server <remote-server>

      Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':
      OPTIONS="-u chrony"
    compliance:
      - cis: ["2.2.1.3"]
      - cis_csc: ["6.1"]
    condition: all
    rules:
      - 'f:/etc/chrony.conf -> r:^\s*server\s+\.+'
      - 'f:/etc/sysconfig/chronyd -> r:^\s*OPTIONS\s*=\s*"-u\s*chrony"'

  # 2.2.2 Ensure X11 Server components are not installed
  - id: 21038
    title: Ensure X11 Server components are not installed.
    description: >
      The X Window System provides a Graphical User Interface (GUI) where users can have
      multiple windows in which to run programs and various add on. The X Windows system is
      typically used on workstations where users login, but not on servers where users typically
      do not login.
    rationale: >
      Unless your organization specifically requires graphical login access via X Windows,
      remove it to reduce the potential attack surface.
    remediation: >
      Run the following command to remove the X Windows Server packages:
      # zypper remove xorg-x11-server*
    compliance:
      - cis: ["2.2.2"]
      - cis_csc: ["2.6"]
    condition: none
    rules:
      - "c:rpm -qa -> r:^xorg-x11"

  # 2.2.3 Ensure Avahi Server is not installed
  - id: 21039
    title: Ensure Avahi Server is not installed.
    description: >
      Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD
      service discovery. Avahi allows programs to publish and discover services and hosts
      running on a local network with no specific configuration. For example, a user can plug a
      computer into a network and Avahi automatically finds printers to print to, files to look at
      and people to talk to, as well as network services running on the machine.
    rationale: >
      Automatic discovery of network services is not normally required for system functionality.
      It is recommended to remove this package to reduce the potential attack surface.
    remediation: >
      Run the following commands to stop, mask and remove avahi-autoipd and avahi:
      # systemctl stop avahi-daemon.socket avahi-daemon.service
      # zypper remove avahi-autoipd avahi
    compliance:
      - cis: ["2.2.3"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q avahi -> r:not installed"
      - "c:rpm -q avahi-autoipd -> r:not installed"

  # 2.2.4 Ensure CUPS is not installed
  - id: 21040
    title: Ensure CUPS is not installed.
    description: >
      The Common Unix Print System (CUPS) provides the ability to print to both local and
      network printers. A system running CUPS can also accept print jobs from remote systems
      and print them to local printers. It also provides a web based remote administration
      capability.
    rationale: >
      If the system does not need to print jobs or accept print jobs from other systems, it is
      recommended that CUPS be removed to reduce the potential attack surface.

      Note: Removing CUPS will prevent printing from the system
    remediation: >
      Run the following command to remove cups:
      # zypper remove cups
    compliance:
      - cis: ["2.2.4"]
      - cis_csc: ["9.2"]
    references:
      - http://www.cups.org
    condition: all
    rules:
      - "c:rpm -q cups -> r:not installed"

  # 2.2.5 Ensure DHCP Server is not installed
  - id: 21041
    title: Ensure DHCP Server is not installed.
    description: >
      The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be
      dynamically assigned IP addresses.
    rationale: >
      Unless a system is specifically set up to act as a DHCP server, it is recommended that the
      dhcp package be removed to reduce the potential attack surface.
    remediation: >
      Run the following command to remove dhcp:
      # zypper remove dhcp
    compliance:
      - cis: ["2.2.5"]
      - cis_csc: ["9.2"]
    references:
      - dhcpd(8)
    condition: all
    rules:
      - "c:rpm -q dhcp -> r:not installed"

  # 2.2.6 Ensure LDAP server is not installed
  - id: 21042
    title: Ensure LDAP server is not installed
    description: >
      The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
      NIS/YP. It is a service that provides a method for looking up information from a central
      database.
    rationale: >
      If the system will not need to act as an LDAP server, it is recommended that the software be
      removed to reduce the potential attack surface.
    remediation: >
      Run the following command to remove openldap-servers:
      # zypper remove openldap2
    compliance:
      - cis: ["2.2.6"]
      - cis_csc: ["9.2"]
    references:
      - http://www.openldap.org
    condition: all
    rules:
      - "c:rpm -q openldap2 -> r:not installed"

  # 2.2.7 Ensure nfs-utils is not installed or the nfs-server service is masked - Not implemented
  # 2.2.8 Ensure rpcbind is not installed or the rpcbind services are masked - Not implemented

  # 2.2.9 Ensure DNS Server is not installed
  - id: 21043
    title: Ensure DNS Server is not installed.
    description: >
      The Domain Name System (DNS) is a hierarchical naming system that maps names to IP
      addresses for computers, services and other resources connected to a network.
    rationale: >
      Unless a system is specifically designated to act as a DNS server, it is recommended that the
      package be removed to reduce the potential attack surface.
    remediation: >
      Run the following command to remove bind:
      # zypper remove bind
    compliance:
      - cis: ["2.2.9"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q bind -> r:not installed"

  # 2.2.10 Ensure FTP Server is not installed
  - id: 21044
    title: Ensure FTP Server is not installed.
    description: >
      FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring
      files between a server and clients over a network, especially where no authentication is
      necessary (permits anonymous users to connect to a server).
    rationale: >
      FTP does not protect the confidentiality of data or authentication credentials. It is
      recommended SFTP be used if file transfer is required. Unless there is a need to run the
      system as a FTP server (for example, to allow anonymous downloads), it is recommended
      that the package be removed to reduce the potential attack surface.

      Note: Additional FTP servers also exist and should be removed if not required.
    remediation: >
      Run the following command to remove vsftpd:
      # zypper remove vsftpd
    compliance:
      - cis: ["2.2.10"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q vsftpd -> r:not installed"

  # 2.2.11 Ensure HTTP server is not installed
  - id: 21045
    title: Ensure HTTP server is not installed.
    description: HTTP or web servers provide the ability to host web site content.
    rationale: >
      Unless there is a need to run the system as a web server, it is recommended that the
      package be removed to reduce the potential attack surface.

      Notes:
        - Several http servers exist. apache, apache2, lighttpd, and nginx are example
          packages that provide an HTTP server
        - These and other packages should also be audited, and removed if not required
    remediation: >
      Run the following command to remove apache2:
      # zypper remove apache2
    compliance:
      - cis: ["2.2.11"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q apache2 -> r:not installed"

  # 2.2.12 Ensure IMAP and POP3 server is not installed
  - id: 21046
    title: Ensure IMAP and POP3 server is not installed.
    description: dovecot is an open source IMAP and POP3 server for Linux based systems.
    rationale: >
      Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended
      that the package be removed to reduce the potential attack surface.

      Notes:
        - Several IMAP/POP3 servers exist and can use other service names. courier-imap and
          cyrus-imap are example services that provide a mail server.
        - These and other services should also be audited and the packages removed if not
          required.
    remediation: >
      Run the following command to remove dovecot:
      # zypper remove dovecot
    compliance:
      - cis: ["2.2.12"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q dovecot -> r:not installed"

  # 2.2.13 Ensure Samba is not installed
  - id: 21047
    title: Ensure Samba is not installed.
    description: >
      The Samba daemon allows system administrators to configure their Linux systems to share
      file systems and directories with Windows desktops. Samba will advertise the file systems
      and directories via the Server Message Block (SMB) protocol. Windows desktop users will
      be able to mount these directories and file systems as letter drives on their systems.
    rationale: >
      If there is no need to mount directories and file systems to Windows systems, then this
      package can be removed to reduce the potential attack surface.
    remediation: >
      Run the following command to remove samba:
      # zypper remove samba
    compliance:
      - cis: ["2.2.13"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q samba -> r:not installed"

  # 2.2.14 Ensure HTTP Proxy Server is not installed
  - id: 21048
    title: Ensure HTTP Proxy Server is not installed.
    description: Squid is a standard proxy server used in many distributions and environments.
    rationale: >
      Unless a system is specifically set up to act as a proxy server, it is recommended that the
      squid package be removed to reduce the potential attack surface.

      Note: Several HTTP proxy servers exist. These should be checked and removed unless required.
    remediation: >
      Run the following command to remove the squid package:
      # zypper remove squid
    compliance:
      - cis: ["2.2.14"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - "c:rpm -q squid -> r:not installed"

  # 2.2.15 Ensure net-snmp is not installed
  - id: 21049
    title: Ensure net-snmp is not installed.
    description: >
      Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the
      health and welfare of network equipment, computer equipment and devices like UPSs.
        - Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157),
          SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and
          IPv6.
        - Support for SNMPv2 classic (a.k.a. "SNMPv2 historic" - RFCs 1441-1452) was
          dropped with the 4.0 release of the UCD-snmp package.
        - The Simple Network Management Protocol (SNMP) server is used to listen for SNMP
          commands from an SNMP management system, execute the commands or collect the
          information and then send results back to the requesting system.
    rationale: >
      The SNMP server can communicate using SNMPv1, which transmits data in the clear and
      does not require authentication to execute commands. SNMPv3 replaces the simple/clear
      text password sharing used in SNMPv2 with more securely encoded parameters. If the the
      SNMP service is not required, the net-snmp package should be removed to reduce the
      attack surface of the system.

      Note: If SNMP is required:
        - The server should be configured for SNMP v3 only. User Authentication and Message
          Encryption should be configured.
        - If SNMP v2 is absolutely necessary, modify the community strings' values.
    remediation: >
      Run the following command to remove net-snmpd:
      # zypper remove net-snmp
    compliance:
      - cis: ["2.2.15"]
      - cis_csc: ["2.6", "9.2"]
    condition: all
    rules:
      - "c:rpm -q net-snmp -> r:not installed"

  # 2.2.16 Ensure mail transfer agent is configured for local-only mode
  - id: 21050
    title: Ensure mail transfer agent is configured for local-only mode.
    description: >
      Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming
      mail and transfer the messages to the appropriate user or mail server. If the system is not
      intended to be a mail server, it is recommended that the MTA be configured to only process
      local mail.
    rationale: >
      The software for all Mail Transfer Agents is complex and most have a long history of
      security issues. While it is important to ensure that the system can process local mail
      messages, it is not necessary to have the MTA's daemon listening on a port unless the
      server is intended to be a mail server that receives and processes mail from other systems.
      Notes:
        - This recommendation is designed around the postfix mail server.
        - Depending on your environment you may have an alternative MTA installed such as
          sendmail. If this is the case consult the documentation for your installed MTA to
          configure the recommended state.
    remediation: >
      Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL section. If
      the line already exists, change it to look like the line below:
      inet_interfaces = loopback-only

      Run the folloing command to restart postfix:
      # systemctl restart postfix
    compliance:
      - cis: ["2.2.16"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'f:/etc/postfix/main.cf -> r:^\s*inet_interfaces\s*=\s*loopback-only'

  # 2.2.17 Ensure rsync is not installed or the rsyncd service is masked
  - id: 21051
    title: Ensure rsync is not installed or the rsyncd service is masked.
    description: The rsyncd service can be used to synchronize files between systems over network links.
    rationale: >
      Unless required, the rsync package should be removed to reduce the attack surface area of
      the system.

      The rsyncd service presents a security risk as it uses unencrypted protocols for
      communication.

      Note: If a required dependency exists for the rsync package, but the rsyncd service is not
      required, the service should be masked.
    remediation: >
      Run the following command to remove the rsync package:
      # zypper remove rsync

      OR

      Run the following command to mask the rsyncd service:
      # systemctl --now mask rsyncd
    compliance:
      - cis: ["2.2.17"]
      - cis_csc: ["9.2"]
    condition: any
    rules:
      - "c:rpm -q rsync -> r:not installed"
      - "c:systemctl is-enabled rsyncd -> r:^masked"

  # 2.2.18 Ensure NIS server is not installed
  - id: 21052
    title: Ensure NIS server is not installed.
    description: >
      The ypserv package provides the Network Information Service (NIS). This service, formally
      known as Yellow Pages, is a client-server directory service protocol for distributing system
      configuration files. The NIS server is a collection of programs that allow for the distribution
      of configuration files.
    rationale: >
      The NIS service is inherently an insecure system that has been vulnerable to DOS attacks,
      buffer overflows and has poor authentication for querying NIS maps. NIS generally has
      been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is
      recommended that the ypserv package be removed, and if required a more secure services
      be used.
    remediation: >
      Run the following command to remove ypserv:
      # zypper remove ypserv
    compliance:
      - cis: ["2.2.18"]
      - cis_csc: ["2.6", "9.2"]
    condition: all
    rules:
      - "c:rpm -q ypserv -> r:not installed"

  # 2.2.19 Ensure telnet-server is not installed
  - id: 21053
    title: Ensure telnet-server is not installed.
    description: >
      The telnet package contains the telnet daemon, which accepts connections from users
      from other systems via the telnet protocol.
    rationale: >
      The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission
      medium could allow a user with access to sniff network traffic the ability to steal
      credentials. The ssh package provides an encrypted session and stronger security.
    remediation: >
      Run the following command to remove the telnet-server package:
      # zypper remove telnet
    compliance:
      - cis: ["2.2.19"]
      - cis_csc: ["2.6", "9.2"]
    condition: all
    rules:
      - "c:rpm -q telnet -> r:not installed"

  # 2.3.1 Ensure NIS Client is not installed
  - id: 21054
    title: Ensure NIS Client is not installed.
    description: >
      The Network Information Service (NIS), formerly known as Yellow Pages, is a client-server
      directory service protocol used to distribute system configuration files. The NIS client (
      ypbind ) was used to bind a machine to an NIS server and receive the distributed
      configuration files.
    rationale: >
      The NIS service is inherently an insecure system that has been vulnerable to DOS attacks,
      buffer overflows and has poor authentication for querying NIS maps. NIS generally has
      been replaced by such protocols as Lightweight Directory Access Protocol (LDAP). It is
      recommended that the service be removed.
    remediation: >
      Run the following command to remove the ypbind package:
      # zypper remove ypbind
    compliance:
      - cis: ["2.3.1"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - "c:rpm -q ypbind -> r:not installed"

  # 2.3.2 Ensure rsh client is not installed
  - id: 21055
    title: Ensure rsh client is not installed.
    description: The rsh package contains the client commands for the rsh services.
    rationale: >
      These legacy clients contain numerous security exposures and have been replaced with the
      more secure SSH package. Even if the server is removed, it is best to ensure the clients are
      also removed to prevent users from inadvertently attempting to use these commands and
      therefore exposing their credentials. Note that removing the rsh package removes the
      clients for rsh , rcp and rlogin.
    remediation: >
      Run the following command to remove the rsh package:
      # zypper remove rsh
    compliance:
      - cis: ["2.3.2"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - "c:rpm -q rsh -> r:not installed"

  # 2.3.3 Ensure talk client is not installed
  - id: 21056
    title: Ensure talk client is not installed.
    description: >
      The talk software makes it possible for users to send and receive messages across systems
      through a terminal session. The talk client, which allows initialization of talk sessions, is
      installed by default.
    rationale: >
      The software presents a security risk as it uses unencrypted protocols for communication.
    remediation: >
      Run the following command to remove the talk package:
      # zypper remove talk
    compliance:
      - cis: ["2.3.3"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - "c:rpm -q talk -> r:not installed"

  # 2.3.4 Ensure telnet client is not installed
  - id: 21057
    title: Ensure telnet client is not installed.
    description: >
      The telnet package contains the telnet client, which allows users to start connections to
      other systems via the telnet protocol.
    rationale: >
      The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission
      medium could allow an unauthorized user to steal credentials. The ssh package provides
      an encrypted session and stronger security and is included in most Linux distributions.
    remediation: >
      Run the following command to remove the telnet package:
      # zypper remove telnet
    compliance:
      - cis: ["2.3.4"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - "c:rpm -q telnet -> r:not installed"

  # 2.3.5 Ensure LDAP client is not installed
  - id: 21058
    title: Ensure LDAP client is not installed.
    description: >
      The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
      NIS/YP. It is a service that provides a method for looking up information from a central
      database.
    rationale: >
      If the system will not need to act as an LDAP client, it is recommended that the software be
      removed to reduce the potential attack surface.
    remediation: >
      Run the following command to remove the openldap-clients package:
      # zypper remove openldap2-clients
    compliance:
      - cis: ["2.3.5"]
      - cis_csc: ["2.6"]
    condition: all
    rules:
      - "c:rpm -q openldap2-clients -> r:not installed"

  # 2.4 Ensure nonessential services are removed or masked - Not implemented
  # 3.1.1 Disable IPv6 - Not implemented
  # 3.1.2 Ensure wireless interfaces are disabled - Not implemented
  # 3.2.1 Ensure IP forwarding is disabled - Not implemented

  # 3.2.2 Ensure packet redirect sending is disabled
  - id: 21059
    title: Ensure packet redirect sending is disabled
    description: >
      ICMP Redirects are used to send routing information to other hosts. As a host itself does
      not act as a router (in a host only configuration), there is no need to send redirects.
    rationale: >
      An attacker could use a compromised host to send invalid ICMP redirects to other router
      devices in an attempt to corrupt routing and have users access a system set up by the
      attacker as opposed to a valid system.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.conf.all.send_redirects = 0
      net.ipv4.conf.default.send_redirects = 0

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.conf.all.send_redirects=0
      # sysctl -w net.ipv4.conf.default.send_redirects=0
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.2.2"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.send_redirects -> r:^net.ipv4.conf.all.send_redirects\s*=\s*0$'
      - 'c:sysctl net.ipv4.conf.default.send_redirects -> r:^net.ipv4.conf.default.send_redirects\s*=\s*0$'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.send_redirects /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.all.send_redirects\s*=\s*0$'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.send_redirects /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.default.send_redirects\s*=\s*0$'

  # 3.3.1 Ensure source routed packets are not accepted - Not implemented
  # 3.3.2 Ensure ICMP redirects are not accepted - Not implemented

  #3.3.3 Ensure secure ICMP redirects are not accepted
  - id: 21060
    title: Ensure secure ICMP redirects are not accepted.
    description: >
      Secure ICMP redirects are the same as ICMP redirects, except they come from gateways
      listed on the default gateway list. It is assumed that these gateways are known to your
      system, and that they are likely to be secure.
    rationale: >
      It is still possible for even known gateways to be compromised. Setting
      net.ipv4.conf.all.secure_redirects to 0 protects the system from routing table
      updates by possibly compromised known gateways.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.conf.all.secure_redirects = 0
      net.ipv4.conf.default.secure_redirects = 0

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.conf.all.secure_redirects=0
      # sysctl -w net.ipv4.conf.default.secure_redirects=0
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.secure_redirects -> r:^net.ipv4.conf.all.secure_redirects\s*=\s*0$'
      - 'c:sysctl net.ipv4.conf.default.secure_redirects -> r:^net.ipv4.conf.default.secure_redirects\s*=\s*0$'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.secure_redirects /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.all.secure_redirects\s*=\s*0$'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.secure_redirects /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.default.secure_redirects\s*=\s*0$'

  # 3.3.4 Ensure suspicious packets are logged
  - id: 21061
    title: Ensure suspicious packets are logged.
    description: >
      When enabled, this feature logs packets with un-routable source addresses to the kernel
      log.
    rationale: >
      Enabling this feature and logging these packets allows an administrator to investigate the
      possibility that an attacker is sending spoofed packets to their system.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.conf.all.log_martians = 1
      net.ipv4.conf.default.log_martians = 1

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.conf.all.log_martians=1
      # sysctl -w net.ipv4.conf.default.log_martians=1
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.4"]
      - cis_csc: ["6.2", "6.3"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.log_martians -> r:^net.ipv4.conf.all.log_martians\s*=\s*1$'
      - 'c:sysctl net.ipv4.conf.default.log_martians -> r:^net.ipv4.conf.default.log_martians\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.log_martians /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.all.log_martians\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.log_martians /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.default.log_martians\s*=\s*1$'

  # 3.3.5 Ensure broadcast ICMP requests are ignored
  - id: 21062
    title: Ensure broadcast ICMP requests are ignored
    description: >
      Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to ignore all
      ICMP echo and timestamp requests to broadcast and multicast addresses.
    rationale: >
      Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for
      your network could be used to trick your host into starting (or participating) in a Smurf
      attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast
      messages with a spoofed source address. All hosts receiving this message and responding
      would send echo-reply messages back to the spoofed address, which is probably not
      routable. If many hosts respond to the packets, the amount of traffic on the network could
      be significantly multiplied.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.icmp_echo_ignore_broadcasts = 1

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.5"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.icmp_echo_ignore_broadcasts -> r:^net.ipv4.icmp_echo_ignore_broadcasts\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.icmp_echo_ignore_broadcasts /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.icmp_echo_ignore_broadcasts\s*=\s*1$'

  # 3.3.6 Ensure bogus ICMP responses are ignored
  - id: 21063
    title: Ensure bogus ICMP responses are ignored.
    description: >
      Setting icmp_ignore_bogus_error_responses to 1 prevents the kernel from logging bogus
      responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from
      filling up with useless log messages.
    rationale: >
      Some routers (and some attackers) will send responses that violate RFC-1122 and attempt
      to fill up a log file system with many useless error messages.
    remediation: >
      Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.icmp_ignore_bogus_error_responses = 1

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.6"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.icmp_ignore_bogus_error_responses -> r:^net.ipv4.icmp_ignore_bogus_error_responses\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.icmp_ignore_bogus_error_responses /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.icmp_ignore_bogus_error_responses\s*=\s*1$'

  # 3.3.7 Ensure Reverse Path Filtering is enabled
  - id: 21064
    title: Ensure Reverse Path Filtering is enabled.
    description: >
      Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to 1 forces
      the Linux kernel to utilize reverse path filtering on a received packet to determine if the
      packet was valid. Essentially, with reverse path filtering, if the return packet does not go
      out the same interface that the corresponding source packet came from, the packet is
      dropped (and logged if log_martians is set).
    rationale: >
      Setting these flags is a good way to deter attackers from sending your system bogus
      packets that cannot be responded to. One instance where this feature breaks down is if
      asymmetrical routing is employed. This would occur when using dynamic routing protocols
      (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you
      will not be able to enable this feature without breaking the routing.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.conf.all.rp_filter = 1
      net.ipv4.conf.default.rp_filter = 1

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.conf.all.rp_filter=1
      # sysctl -w net.ipv4.conf.default.rp_filter=1
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.7"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv4.conf.all.rp_filter -> r:^net.ipv4.conf.all.rp_filter\s*=\s*1$'
      - 'c:sysctl net.ipv4.conf.default.rp_filter -> r:^net.ipv4.conf.default.rp_filter\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.conf\.all\.rp_filter /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.all.rp_filter\s*=\s*1$'
      - 'c:grep -Rh net\.ipv4\.conf\.default\.rp_filter /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.conf.default.rp_filter\s*=\s*1$'

  # 3.3.8 Ensure TCP SYN Cookies is enabled
  - id: 21065
    title: Ensure TCP SYN Cookies is enabled
    description: >
      When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until the
      half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN
      cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the
      SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that
      encodes the source and destination IP address and port number and the time the packet
      was sent. A legitimate connection would send the ACK packet of the three way handshake
      with the specially crafted sequence number. This allows the system to verify that it has
      received a valid response to a SYN cookie and allow the connection, even though there is no
      corresponding SYN in the queue.
    rationale: >
      Attackers use SYN flood attacks to perform a denial of service attacked on a system by
      sending many SYN packets without completing the three way handshake. This will quickly
      use up slots in the kernel's half-open connection queue and prevent legitimate connections
      from succeeding. SYN cookies allow the system to keep accepting valid connections, even if
      under a denial of service attack.
    remediation: >
      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv4.tcp_syncookies = 1

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv4.tcp_syncookies=1
      # sysctl -w net.ipv4.route.flush=1
    compliance:
      - cis: ["3.3.8"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:grep -Rh net\.ipv4\.tcp_syncookies /etc/sysctl.conf /etc/sysctl.d -> r:^net.ipv4.tcp_syncookies\s*=\s*1$'
      - 'c:/sbin/sysctl net.ipv4.tcp_syncookies -> r:^net.ipv4.tcp_syncookies\s*=\s*1$'

  # 3.3.9 Ensure IPv6 router advertisements are not accepted
  - id: 21066
    title: Ensure IPv6 router advertisements are not accepted
    description: This setting disables the system's ability to accept IPv6 router advertisements.
    rationale: >
      It is recommended that systems do not accept router advertisements as they could be
      tricked into routing traffic to compromised machines. Setting hard routes within the
      system (usually a single default route to a trusted router) protects the system from bad
      routes.
    remediation: >
      IF IPv6 is enabled:

      Set the following parameters in /etc/sysctl.conf or a /etc/sysctl.d/* file:
      net.ipv6.conf.all.accept_ra = 0
      net.ipv6.conf.default.accept_ra = 0

      Run the following commands to set the active kernel parameters:
      # sysctl -w net.ipv6.conf.all.accept_ra=0
      # sysctl -w net.ipv6.conf.default.accept_ra=0
      # sysctl -w net.ipv6.route.flush=1
    compliance:
      - cis: ["3.3.9"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sysctl net.ipv6.conf.all.accept_ra -> r:\s*0$'
      - 'c:sysctl net.ipv6.conf.default.accept_ra -> r:\s*0$'
      - 'c:grep -Rh "net\.ipv6\.conf\.all\.accept_ra" /etc/sysctl.conf /etc/sysctl.d -> r:^\s*net.ipv6.conf.all.accept_ra\s*=\s*0'
      - 'c:grep -Rh "net\.ipv6\.conf\.default\.accept_ra" /etc/sysctl.conf /etc/sysctl.d -> r:^\s*net.ipv6.conf.default.accept_ra\s*=\s*0'

  # 3.4.1 Ensure DCCP is disabled
  - id: 21067
    title: Ensure DCCP is disabled
    description: >
      The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that
      supports streaming media and telephony. DCCP provides a way to gain access to
      congestion control, without having to do it at the application layer, but does not provide
      insequence delivery.
    rationale: >
      If the protocol is not required, it is recommended that the drivers not be installed to reduce
      the potential attack surface.
    remediation: >
      Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
      Example: vim /etc/modprobe.d/dccp.conf
      and add the following line:

      install dccp /bin/true
    compliance:
      - cis: ["3.4.1"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:grep -R dccp /etc/modprobe.d -> r:^/etc/modprobe.d/\.+.conf:\s*install\s+dccp\s+/bin/true'

  # 3.4.2 Ensure SCTP is disabled
  - id: 21068
    title: Ensure SCTP is disabled
    description: >
      The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to
      support message oriented communication, with several streams of messages in one
      connection. It serves a similar function as TCP and UDP, incorporating features of both. It is
      message-oriented like UDP, and ensures reliable in-sequence transport of messages with
      congestion control like TCP.
    rationale: >
      If the protocol is not being used, it is recommended that kernel module not be loaded,
      disabling the service to reduce the potential attack surface.
    remediation: >
      Edit or create a file in the /etc/modprobe.d/ directory ending in .conf
      Example: vim /etc/modprobe.d/sctp.conf
      and add the following line:

      install sctp /bin/true
    compliance:
      - cis: ["3.4.2"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:grep -R sctp /etc/modprobe.d -> r:^/etc/modprobe.d/\.+.conf:\s*install\s+sctp\s+/bin/true'

  # 3.5.1.1 Ensure FirewallD is installed
  - id: 21069
    title: Ensure FirewallD is installed
    description: >
      firewalld is a firewall management tool for Linux operating systems. It provides firewall
      features by acting as a front-end for the Linux kernel's netfilter framework via the iptables
      backend or provides firewall features by acting as a front-end for the Linux kernel's
      netfilter framework via the nftables utility.

      FirewallD replaces iptables as the default firewall management tool. Use the firewalld
      utility to configure a firewall for less complex firewalls. The utility is easy to use and covers
      the typical use cases scenario. FirewallD supports both IPv4 and IPv6 networks and can
      administer separate firewall zones with varying degrees of trust as defined in zone profiles.

      Note: Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux
      kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the
      nft command line program.
    rationale: >
      A firewall utility is required to configure the Linux kernel's netfilter framework via the
      iptables or nftables back-end.

      The Linux kernel's netfilter framework host-based firewall can protect against threats
      originating from within a corporate network to include malicious mobile code and poorly
      configured software on a host.

      Note: Only one firewall utility should be installed and configured. FirewallD is dependent on
      the iptables package.
    remediation: >
      Run the following command to install FirewallD and iptables:
      # zypper install firewalld iptables
    compliance:
      - cis: ["3.5.1.1"]
      - cis_csc: ["9.4"]
    condition: none
    rules:
      - "c:rpm -q firewalld -> r:not installed"
      - "c:rpm -q iptables -> r:not installed"

  # 3.5.1.2 Ensure nftables is not installed or stopped and masked - Not implemented

  # 3.5.1.3 Ensure firewalld service is enabled and running
  - id: 21070
    title: Ensure firewalld service is enabled and running
    description: >
      firewalld.service enables the enforcement of firewall rules configured through
      firewalld
    rationale: >
      Ensure that the firewalld.service is enabled and running to enforce firewall rules
      configured through firewalld
    remediation: >
      Run the following command to unmask firewalld
      # systemctl unmask firewalld

      Run the following command to enable and start firewalld
      # systemctl --now enable firewalld
    compliance:
      - cis: ["3.5.1.3"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - "c:systemctl is-enabled firewalld -> r:^enabled"
      - "c:firewall-cmd --state -> r:^running"

  # 3.5.1.4 Ensure default zone is set - Not implemented
  # 3.5.1.5 Ensure network interfaces are assigned to appropriate zone - Not implemented
  # 3.5.1.6 Ensure unnecessary services and ports are not accepted - Not implemented

  # 3.5.2.1 Ensure nftables is installed
  - id: 21071
    title: Ensure nftables is installed
    description: >
      nftables provides a new in-kernel packet classification framework that is based on a
      network-specific Virtual Machine (VM) and a new nft userspace command line tool.
      nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure,
      the connection tracking system, NAT, userspace queuing and logging subsystem.
        Notes:
          - nftables is available in Linux kernel 3.13 and newer.
          - Only one firewall utility should be installed and configured.
    rationale: >
      nftables is a subsystem of the Linux kernel that can protect against threats originating from
      within a corporate network to include malicious mobile code and poorly configured
      software on a host.
    remediation: >
      Run the following command to install nftables
      # zypper install nftables
    compliance:
      - cis: ["3.5.2.1"]
      - cis_csc: ["9.4"]
    condition: none
    rules:
      - "c:rpm -q nftables -> r:not installed"

  # 3.5.2.2 Ensure firewalld is not installed or stopped and masked - Not implemented
  # 3.5.2.3 Ensure iptables are flushed - Not implemented

  # 3.5.2.4 Ensure a table exists
  - id: 21072
    title: Ensure a table exists.
    description: >
      Tables hold chains. Each table only has one address family and only applies to packets of
      this family. Tables can have one of five families.
    rationale: >
      nftables doesn't have any default tables. Without a table being build, nftables will not filter
      network traffic.
    remediation: >
      Run the following command to create a table in nftables
      # nft create table inet <table name>
    compliance:
      - cis: ["3.5.2.4"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:nft list tables -> r:^table inet\s+\.+'

  # 3.5.2.5 Ensure base chains exist
  - id: 21073
    title: Ensure base chains exist.
    description: >
      Chains are containers for rules. They exist in two kinds, base chains and regular chains. A
      base chain is an entry point for packets from the networking stack, a regular chain may be
      used as jump target and is used for better rule organization.
    rationale: >
      If a base chain doesn't exist with a hook for input, forward, and delete, packets that would
      flow through those chains will not be touched by nftables.
    remediation: >
      Run the following command to create the base chains:
      # nft create chain inet <table name> <base chain name> { type filter hook
      <(input|forward|output)> priority 0 \; }
    compliance:
      - cis: ["3.5.2.5"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:nft list ruleset -> !r:^# && r:type hook input\s+\.+'
      - 'c:nft list ruleset -> !r:^# && r:type hook forward\s+\.+'
      - 'c:nft list ruleset -> !r:^# && r:type hook output\s+\.+'

  # 3.5.2.6 Ensure loopback traffic is configured
  # 3.5.2.7 Ensure outbound and established connections are configured

  # 3.5.2.8 Ensure default deny firewall policy
  - id: 21074
    title: Ensure default deny firewall policy.
    description: >
      Base chain policy is the default verdict that will be applied to packets reaching the end of
      the chain.
    rationale: >
      There are two policies: accept (Default) and drop. If the policy is set to accept, the firewall
      will accept any packet that is not configured to be denied and the packet will continue
      transversing the network stack.
      It is easier to white list acceptable usage than to black list unacceptable usage.

      Note: Changing firewall settings while connected over network can result in being locked
      out of the system.
    remediation: >
      Run the following command for the base chains with the input, forward, and output hooks
      to implement a default DROP policy:
      # nft chain <table family> <table name> <chain name> { policy drop \; }

      Example:
      # nft chain inet filter input { policy drop \; }
      # nft chain inet filter forward { policy drop \; }
      # nft chain inet filter output { policy drop \; }
    compliance:
      - cis: ["3.5.2.8"]
      - cis_csc: ["9.4"]
    references:
      - Manual Page nft
    condition: all
    rules:
      - 'c:nft list ruleset -> !r:^# && r:type hook input\s+\.+policy\s+drop'
      - 'c:nft list ruleset -> !r:^# && r:type hook forward\s+\.+policy\s+drop'
      - 'c:nft list ruleset -> !r:^# && r:type hook output\s+\.+policy\s+drop'

  # 3.5.2.9 Ensure nftables service is enabled
  - id: 21075
    title: Ensure nftables service is enabled
    description: >
      The nftables service allows for the loading of nftables rulesets during boot, or starting on
      the nftables service
    rationale: >
      The nftables service restores the nftables rules from the rules files referenced in the
      /etc/sysconfig/nftables.conf file during boot or the starting of the nftables service
    remediation: >
      Run the following command to enable the nftables service:
      # systemctl enable nftables
    compliance:
      - cis: ["3.5.2.9"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - "c:systemctl is-enabled nftables -> r:^enabled"

  # 3.5.2.10 Ensure nftables rules are permanent - Not implemented
  # 3.5.3.1.1 Ensure iptables package is installed - Not implemented

  # 3.5.3.1.2 Ensure nftables is not installed - Not implemented
  - id: 21076
    title: Ensure nftables is not installed
    description: >
      nftables is a subsystem of the Linux kernel providing filtering and classification of network
      packets/datagrams/frames and is the successor to iptables.
    rationale: >
      Running both iptables and nftables may lead to conflict.
    remediation: >
      Run the following command to remove nftables:
      # zypper remove nftables
    compliance:
      - cis: ["3.5.3.1.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - "c:rpm -q nftables -> r:not installed"

  # 3.5.3.1.3 Ensure firewalld is not installed or stopped and masked - Not implemented

  # 3.5.3.2.1 Ensure default deny firewall policy
  - id: 21077
    title: Ensure default deny firewall policy
    description: >
      A default deny all policy on connections ensures that any unconfigured network usage will
      be rejected.
    rationale: >
      With a default accept policy the firewall will accept any packet that is not configured to be
      denied. It is easier to white list acceptable usage than to black list unacceptable usage.

      Note: Changing firewall settings while connected over network can result in being locked
      out of the system.
    remediation: >
      Run the following commands to implement a default DROP policy:
      # iptables -P INPUT DROP
      # iptables -P OUTPUT DROP
      # iptables -P FORWARD DROP
    compliance:
      - cis: ["3.5.3.2.1"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:iptables -L -> r:^Chain INPUT \(policy DROP\)'
      - 'c:iptables -L -> r:^Chain FORWARD \(policy DROP\)'
      - 'c:iptables -L -> r:^Chain OUTPUT \(policy DROP\)'

  # 3.5.3.2.2 Ensure loopback traffic is configured
  - id: 21078
    title: Ensure loopback traffic is configured
    description: >
      Configure the loopback interface to accept traffic. Configure all other interfaces to deny
      traffic to the loopback network (127.0.0.0/8).
    rationale: >
      Loopback traffic is generated between processes on machine and is typically critical to
      operation of the system. The loopback interface is the only place that loopback network
      (127.0.0.0/8) traffic should be seen, all other interfaces should ignore traffic on this
      network as an anti-spoofing measure.

      Note: Changing firewall settings while connected over network can result in being locked
      out of the system.
    remediation: >
      Run the following commands to implement the loopback rules:
      # iptables -A INPUT -i lo -j ACCEPT
      # iptables -A OUTPUT -o lo -j ACCEPT
      # iptables -A INPUT -s 127.0.0.0/8 -j DROP
    compliance:
      - cis: ["3.5.3.2.2"]
      - cis_csc: ["9.4"]
    condition: all
    rules:
      - 'c:iptables -L INPUT -v -n -> r:^\s*\d+\s+\d+\s+ACCEPT\s+all\s+--\s+lo\s+*\s+0.0.0.0/0\s+0.0.0.0/0'
      - 'c:iptables -L INPUT -v -n -> r:^\s*\d+\s+\d+\s+DROP\s+all\s+--\s+*\s+*\s+127.0.0.0/8\s+0.0.0.0/0'
      - 'c:iptables -L OUTPUT -v -n -> r:^\s*\d+\s+\d+\s+ACCEPT\s+all\s+--\s+*\s+lo\s+0.0.0.0/0\s+0.0.0.0/0'

  # 3.5.3.2.3 Ensure outbound and established connections are configured - Not implemented
  # 3.5.3.2.4 Ensure firewall rules exist for all open ports - Not implemented
  # 3.5.3.3.1 Ensure IPv6 default deny firewall policy - Not implemented
  # 3.5.3.3.2 Ensure IPv6 loopback traffic is configured - Not implemented
  # 3.5.3.3.3 Ensure IPv6 outbound and established connections are configured - Not implemented
  # 3.5.3.3.4 Ensure IPv6 firewall rules exist for all open ports - Not implemented

  # 4.1.1.1 Ensure auditd is installed
  - id: 21079
    title: Ensure auditd is installed
    description: >
      auditd is the userspace component to the Linux Auditing System. It's responsible for
      writing audit records to the disk
    rationale: >
      The capturing of system events provides system administrators with information to allow
      them to determine if unauthorized access to their system is occurring.
    remediation: >
      Run the following command to Install auditd
      # zypper install audit
    compliance:
      - cis: ["4.1.1.1"]
      - cis_csc: ["6.2", "6.3"]
    condition: none
    rules:
      - "c:rpm -q audit -> r:not installed"

  # 4.1.1.2 Ensure auditd service is enabled and running
  - id: 21080
    title: Ensure auditd service is enabled and running
    description: Turn on the auditd daemon to record system events.
    rationale: >
      The capturing of system events provides system administrators with information to allow
      them to determine if unauthorized access to their system is occurring.
    remediation: >
      Run the following command to enable and start auditd:
      # systemctl --now enable auditd
    compliance:
      - cis: ["4.1.1.2"]
      - cis_csc: ["6.2", "6.3"]
    condition: all
    rules:
      - "c:systemctl is-enabled auditd -> r:^enabled"
      - 'c:systemctl status auditd -> r:^\s*Active: active \(running\) since \.+'

  # 4.1.1.3 Ensure auditing for processes that start prior to auditd is enabled - Not implemented

  # 4.1.2.1 Ensure audit log storage size is configured
  - id: 21081
    title: Ensure audit log storage size is configured.
    description: >
      Configure the maximum size of the audit log file. Once the log reaches the maximum size, it
      will be rotated and a new log file will be started.

      Notes:
        - The max_log_file parameter is measured in megabytes.
        - Other methods of log rotation may be appropriate based on site policy. One example is
          time-based rotation strategies which don't have native support in auditd
          configurations. Manual audit of custom configurations should be evaluated for
          effectiveness and completeness.
    rationale: >
      It is important that an appropriate size is determined for log files so that they do not impact
      the system and audit data is not lost.
    remediation: >
      Set the following parameter in /etc/audit/auditd.conf in accordance with site policy:
      max_log_file = <MB>
    compliance:
      - cis: ["4.1.2.1"]
      - cis_csc: ["6.4"]
    condition: all
    rules:
      - 'f:/etc/audit/auditd.conf -> r:^\s*max_log_file\s*=\s*\d+'

  # 4.1.2.2 Ensure audit logs are not automatically deleted
  - id: 21082
    title: Ensure audit logs are not automatically deleted.
    description: >
      The max_log_file_action setting determines how to handle the audit log file reaching the
      max file size. A value of keep_logs will rotate the logs but never delete old logs.
    rationale: >
      In high security contexts, the benefits of maintaining a long audit history exceed the cost of
      storing the audit history.
    remediation: >
      Set the following parameter in /etc/audit/auditd.conf:
      max_log_file_action = keep_logs
    compliance:
      - cis: ["4.1.2.2"]
      - cis_csc: ["6.2", "6.4"]
    condition: all
    rules:
      - 'f:/etc/audit/auditd.conf -> r:^\s*max_log_file_action\s*=\s*keep_logs'

  # 4.1.2.3 Ensure system is disabled when audit logs are full
  - id: 21083
    title: Ensure system is disabled when audit logs are full.
    description: The auditd daemon can be configured to halt the system when the audit logs are full.
    rationale: >
      In high security contexts, the risk of detecting unauthorized access or nonrepudiation
      exceeds the benefit of the system's availability.
    remediation: >
      Set the following parameters in /etc/audit/auditd.conf:
      space_left_action = email
      action_mail_acct = root
      admin_space_left_action = halt
    compliance:
      - cis: ["4.1.2.3"]
      - cis_csc: ["6.2", "6.4"]
    condition: all
    rules:
      - 'f:/etc/audit/auditd.conf -> r:^\s*space_left_action\s*=\s*email'
      - 'f:/etc/audit/auditd.conf -> r:^\s*action_mail_acct\s*=\s*root'
      - 'f:/etc/audit/auditd.conf -> r:^\s*admin_space_left_action\s*=\s*halt'

  # 4.1.2.4 Ensure audit_backlog_limit is sufficient - Not implemented
  # 4.1.3 Ensure events that modify date and time information are collected - Not implemented

  # 4.1.4 Ensure events that modify user/group information are collected
  - id: 21084
    title: Ensure events that modify user/group information are collected.
    description: >
      Record events affecting the group , passwd (user IDs), shadow and gshadow (passwords) or
      /etc/security/opasswd (old passwords, based on remember parameter in the PAM
      configuration) files. The parameters in this section will watch the files to see if they have
      been opened for write or have had attribute changes (e.g. permissions) and tag them with
      the identifier "identity" in the audit log file.

      Note: Reloading the auditd config to set active settings may require a system reboot.
    rationale: >
      Unexpected changes to these files could be an indication that the system has been
      compromised and that an unauthorized user is attempting to hide their activities or
      compromise additional accounts.
    remediation: >
      Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules
      Example: vi /etc/audit/rules.d/identity.rules
      and add the following lines:

      -w /etc/group -p wa -k identity
      -w /etc/passwd -p wa -k identity
      -w /etc/gshadow -p wa -k identity
      -w /etc/shadow -p wa -k identity
      -w /etc/security/opasswd -p wa -k identity
    compliance:
      - cis: ["4.1.4"]
      - cis_csc: ["4.8"]
    condition: all
    rules:
      - 'c:grep -R identity /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/group\s+-p\s+wa\s+-k\s+identity'
      - 'c:grep -R identity /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/passwd\s+-p\s+wa\s+-k\s+identity'
      - 'c:grep -R identity /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/gshadow\s+-p\s+wa\s+-k\s+identity'
      - 'c:grep -R identity /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/shadow\s+-p\s+wa\s+-k\s+identity'
      - 'c:grep -R identity /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/security/opasswd\s+-p\s+wa\s+-k\s+identity'
      - 'c:sh -c "auditctl -l | grep identity" -> r:^\s*-w\s+/etc/group\s+-p\s+wa\s+-k\s+identity'
      - 'c:sh -c "auditctl -l | grep identity" -> r:^\s*-w\s+/etc/passwd\s+-p\s+wa\s+-k\s+identity'
      - 'c:sh -c "auditctl -l | grep identity" -> r:^\s*-w\s+/etc/gshadow\s+-p\s+wa\s+-k\s+identity'
      - 'c:sh -c "auditctl -l | grep identity" -> r:^\s*-w\s+/etc/shadow\s+-p\s+wa\s+-k\s+identity'
      - 'c:sh -c "auditctl -l | grep identity" -> r:^\s*-w\s+/etc/security/opasswd\s+-p\s+wa\s+-k\s+identity'

  # 4.1.5 Ensure events that modify the system's network environment are collected - Not implemented

  # 4.1.6 Ensure events that modify the system's Mandatory Access Controls are collected
  - id: 21085
    title: Ensure events that modify the system's Mandatory Access Controls are collected.
    description: >
      Monitor SELinux mandatory access controls. The parameters below monitor any write
      access (potential additional, deletion or modification of files in the directory) or attribute
      changes to the /etc/selinux/ and /usr/share/selinux/ directories.

      Notes:
        - If a different Mandatory Access Control method is used, changes to the corresponding
          directories should be audited.
        - Reloading the auditd config to set active settings requires the auditd service to be
          restarted, and may require a system reboot.
    rationale: >
      Changes to files in the /etc/selinux/ and /usr/share/selinux/ directories could indicate
      that an unauthorized user is attempting to modify access controls and change security
      contexts, leading to a compromise of the system.
    remediation: >
      Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules
      Example: vi /etc/audit/rules.d/MAC_policy.rules
      and add the following lines:

      -w /etc/selinux/ -p wa -k MAC-policy
      -w /usr/share/selinux/ -p wa -k MAC-policy
    compliance:
      - cis: ["4.1.6"]
      - cis_csc: ["5.5"]
    condition: all
    rules:
      - 'c:grep -R MAC-policy /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/selinux/\s+-p\s+wa\s+-k\s+MAC-policy'
      - 'c:grep -R MAC-policy /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/usr/share/selinux/\s+-p\s+wa\s+-k\s+MAC-policy'
      - 'c:sh -c "auditctl -l | grep MAC-policy" -> r:^\s*-w\s+/etc/selinux/\s+-p\s+wa\s+-k\s+MAC-policy'
      - 'c:sh -c "auditctl -l | grep MAC-policy" -> r:^\s*-w\s+/usr/share/selinux/\s+-p\s+wa\s+-k\s+MAC-policy'

  # 4.1.7 Ensure login and logout events are collected
  - id: 21086
    title: Ensure login and logout events are collected.
    description: >
      Monitor login and logout events. The parameters below track changes to files associated
      with login/logout events.
        - The file /var/log/faillog tracks failed events from login.
        - The file /var/log/lastlog maintain records of the last time a user successfully
          logged in.
        - The file /var/log/tallylog maintains records of failures via the pam_tally2
          module
      Note: Reloading the auditd config to set active settings requires the auditd service to be
      restarted, and may require a system reboot.
    rationale: >
      Monitoring login/logout events could provide a system administrator with information
      associated with brute force attacks against user logins.
    remediation: >
      Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules
      Example: vi /etc/audit/rules.d/logins.rules
      and add the following lines:

      -w /var/log/faillog -p wa -k logins
      -w /var/log/lastlog -p wa -k logins
      -w /var/log/tallylog -p wa -k logins
    compliance:
      - cis: ["4.1.7"]
      - cis_csc: ["4.9", "16.11", "16.13"]
    condition: all
    rules:
      - 'c:grep -R logins /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/log/faillog\s+-p\s+wa\s+-k\s+logins'
      - 'c:grep -R logins /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/log/lastlog\s+-p\s+wa\s+-k\s+logins'
      - 'c:grep -R logins /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/log/tallylog\s+-p\s+wa\s+-k\s+logins'
      - 'c:sh -c "auditctl -l | grep logins" -> r:^\s*-w\s+/var/log/faillog\s+-p\s+wa\s+-k\s+logins'
      - 'c:sh -c "auditctl -l | grep logins" -> r:^\s*-w\s+/var/log/lastlog\s+-p\s+wa\s+-k\s+logins'
      - 'c:sh -c "auditctl -l | grep logins" -> r:^\s*-w\s+/var/log/tallylog\s+-p\s+wa\s+-k\s+logins'

  # 4.1.8 Ensure session initiation information is collected
  - id: 21087
    title: Ensure session initiation information is collected.
    description: >
      Monitor session initiation events. The parameters in this section track changes to the files
      associated with session events. The file /var/run/utmp tracks all currently logged in users.
      All audit records will be tagged with the identifier "session." The /var/log/wtmp file tracks
      logins, logouts, shutdown, and reboot events. The file /var/log/btmp keeps track of failed
      login attempts and can be read by entering the command /usr/bin/last -f
      /var/log/btmp . All audit records will be tagged with the identifier "logins."

      Notes:
        - The last command can be used to read /var/log/wtmp (last with no parameters)
          and /var/run/utmp (last -f /var/run/utmp)
        - Reloading the auditd config to set active settings requires the auditd service to be
          restarted, and may require a system reboot.
    rationale: >
      Monitoring these files for changes could alert a system administrator to logins occurring at
      unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when
      they do not normally log in).
    remediation: >
      Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules
      Example: vi /etc/audit/rules.d/session.rules
      and add the following lines:

      -w /var/run/utmp -p wa -k session
      -w /var/log/wtmp -p wa -k logins
      -w /var/log/btmp -p wa -k logins
    compliance:
      - cis: ["4.1.8"]
      - cis_csc: ["4.9", "16.11", "16.13"]
    condition: all
    rules:
      - 'c:grep -RE "(session|logins)" /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/run/utmp\s+-p\s+wa\s+-k\s+session'
      - 'c:grep -RE "(session|logins)" /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/log/wtmp\s+-p\s+wa\s+-k\s+logins'
      - 'c:grep -RE "(session|logins)" /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/var/log/btmp\s+-p\s+wa\s+-k\s+logins'
      - 'c:sh -c "auditctl -l | grep -E \"(session|logins)\"" -> r:^\s*-w\s+/var/run/utmp\s+-p\s+wa\s+-k\s+session'
      - 'c:sh -c "auditctl -l | grep -E \"(session|logins)\"" -> r:^\s*-w\s+/var/log/wtmp\s+-p\s+wa\s+-k\s+logins'
      - 'c:sh -c "auditctl -l | grep -E \"(session|logins)\"" -> r:^\s*-w\s+/var/log/btmp\s+-p\s+wa\s+-k\s+logins'

  # 4.1.9 Ensure discretionary access control permission modification events are collected - Not implemented
  # 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected - Not implemented
  # 4.1.11 Ensure use of privileged commands is collected - Not implemented
  # 4.1.12 Ensure successful file system mounts are collected - Not implemented
  # 4.1.13 Ensure file deletion events by users are collected - Not implemented

  # 4.1.14 Ensure changes to system administration scope (sudoers) is collected
  - id: 21088
    title: Ensure changes to system administration scope (sudoers) is collected
    description: >
      Monitor scope changes for system administrators. If the system has been properly
      configured to force system administrators to log in as themselves first and then use the
      sudo command to execute privileged commands, it is possible to monitor changes in scope.
      The file /etc/sudoers or a file in the /etc/sudoers.d directory will be written to when the
      file or its attributes have changed.

      Notes: Reloading the auditd config to set active settings may require a system reboot.
    rationale: >
      Changes in the /etc/sudoers file, or a file in the /etc/sudoers.d/ directory can indicate
      that an unauthorized change has been made to scope of system administrator activity.
    remediation: >
      Edit or create a file in the /etc/audit/rules.d/ directory ending in .rules
      Example: vi /etc/audit/rules.d/scope.rules
      and add the following lines:

      -w /etc/sudoers -p wa -k scope
      -w /etc/sudoers.d/ -p wa -k scope
    compliance:
      - cis: ["4.1.14"]
      - cis_csc: ["4.8"]
    condition: all
    rules:
      - 'c:grep -R scope /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/sudoers\s+-p\s+wa\s+-k\s+scope'
      - 'c:grep -R scope /etc/audit/rules.d/ -> r:^/etc/audit/rules.d/\.+.rules:\s*-w\s+/etc/sudoers.d/\s+-p\s+wa\s+-k\s+scope'
      - 'c:sh -c "auditctl -l | grep scope" -> r:^\s*-w\s+/etc/sudoers\s+-p\s+wa\s+-k\s+scope'
      - 'c:sh -c "auditctl -l | grep scope" -> r:^\s*-w\s+/etc/sudoers.d/\s+-p\s+wa\s+-k\s+scope'

  # 4.1.15 Ensure system administrator actions (sudolog) are collected - Not implemented
  # 4.1.16 Ensure kernel module loading and unloading is collected - Not implemented

  # 4.1.17 Ensure the audit configuration is immutable
  - id: 21089
    title: Ensure the audit configuration is immutable.
    description: >
      Set system audit so that audit rules cannot be modified with auditctl . Setting the flag "-e
      2" forces audit to be put in immutable mode. Audit changes can only be made on system
      reboot.

      Note: This setting will require the system to be rebooted to update the active auditd
      configuration settings.
    rationale: >
      In immutable mode, unauthorized users cannot execute changes to the audit system to
      potentially hide malicious activity and then put the audit rules back. Users would most
      likely notice a system reboot and that could alert administrators of an attempt to make
      unauthorized audit changes.
    remediation: >
      Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the following line
      at the end of the file:

      -e 2
    compliance:
      - cis: ["4.1.17"]
      - cis_csc: ["6.2", "6.3"]
    condition: all
    rules:
      - 'c:sh -c "grep -R \"^\s*[^#]\" /etc/audit/rules.d/ | tail -1" -> r:^/etc/audit/rules.d/\.+.rules:\s*-e\s+2\s*$'

  # 4.2.1.1 Ensure rsyslog is installed
  - id: 21090
    title: Ensure rsyslog is installed.
    description: >
      The rsyslog software is a recommended replacement to the original syslogd daemon.
      rsyslog provides improvements over syslogd, including:
        - connection-oriented (i.e. TCP) transmission of logs
        - The option to log to database formats
        - Encryption of log data en route to a central logging server
    rationale: >
      The security enhancements of rsyslog such as connection-oriented (i.e. TCP) transmission
      of logs, the option to log to database formats, and the encryption of log data en route to a
      central logging server) justify installing and configuring the package.
    remediation: >
      Run the following command to install rsyslog:
      # zypper install rsyslog
    compliance:
      - cis: ["4.2.1.1"]
      - cis_csc: ["6.2", "6.3"]
    condition: none
    rules:
      - "c:rpm -q rsyslog -> r:not installed"

  # 4.2.1.2 Ensure rsyslog Service is enabled and running
  - id: 21091
    title: Ensure rsyslog Service is enabled and running.
    description: rsyslog needs to be enabled and running to perform logging
    rationale: >
      If the rsyslog service is not activated the system may default to the syslogd service or lack
      logging instead.
    remediation: >
      Run the following command to enable and start rsyslog:
      # systemctl --now enable rsyslog
    compliance:
      - cis: ["4.2.1.2"]
      - cis_csc: ["6.2", "6.3"]
    condition: all
    rules:
      - "c:systemctl is-enabled rsyslog -> r:^enabled"
      - 'c:systemctl status rsyslog -> r:^\s*Active: active \(running\) since \.+'

  # 4.2.1.3 Ensure rsyslog default file permissions configured
  - id: 21092
    title: Ensure rsyslog default file permissions configured.
    description: >
      rsyslog will create logfiles that do not already exist on the system. This setting controls
      what permissions will be applied to these newly created files.
      The $FileCreateMode parameter specifies the file creation mode with which rsyslogd
      creates new files. If not specified, the value 0644 is used.
      Notes:
        - The value given must always be a 4-digit octal number, with the initial digit being
          zero.
        - This setting can be overridden by a less restrictive setting in any file ending in .conf in
          the /etc/rsyslog.d/ directory
    rationale: >
      It is important to ensure that log files have the correct permissions to ensure that sensitive
      data is archived and protected.
    remediation: >
      Edit the /etc/rsyslog.conf and /etc/rsyslog.d/*.conf files and set $FileCreateMode to
      0640 or more restrictive:

      $FileCreateMode 0640
    compliance:
      - cis: ["4.2.1.3"]
      - cis_csc: ["5.1"]
    references:
      - See the rsyslog.conf(5) man page for more information.
    condition: all
    rules:
      - 'c:grep -Rh ^\$FileCreateMode /etc/rsyslog.conf /etc/rsyslog.d/ -> r:^\$FileCreateMode\s+0640'

  # 4.2.1.4 Ensure logging is configured - Not implemented
  # 4.2.1.5 Ensure rsyslog is configured to send logs to a remote log host - Not implemented
  # 4.2.1.6 Ensure remote rsyslog messages are only accepted on designated log hosts - Not implemented

  # 4.2.2.1 Ensure journald is configured to send logs to rsyslog
  - id: 21093
    title: Ensure journald is configured to send logs to rsyslog.
    description: >
      Data from journald may be stored in volatile memory or persisted locally on the server.
      Utilities exist to accept remote export of journald logs, however, use of the rsyslog service
      provides a consistent means of log collection and export.

      Notes:
        - This recommendation assumes that recommendation 4.2.1.5, "Ensure rsyslog is
          configured to send logs to a remote log host" has been implemented.
        - The main configuration file /etc/systemd/journald.conf is read before any of the
          custom *.conf files. If there are custom configs present, they override the main
          configuration parameters
        - As noted in the journald man pages: journald logs may be exported to rsyslog either
          through the process mentioned here, or through a facility like systemdjournald.service. There are trade-offs involved in each implementation, where
          ForwardToSyslog will immediately capture all events (and forward to an external log
          server, if properly configured), but may not capture all boot-up activities. Mechanisms
          such as systemd-journald.service, on the other hand, will record bootup events, but
          may delay sending the information to rsyslog, leading to the potential for log
          manipulation prior to export. Be aware of the limitations of all tools employed to
          secure a system.
    rationale: >
      Storing log data on a remote host protects log integrity from local attacks. If an attacker
      gains root access on the local system, they could tamper with or remove log data that is
      stored on the local system.
    remediation: >
      Edit the /etc/systemd/journald.conf file and add the following line:
      ForwardToSyslog=yes
    compliance:
      - cis: ["4.2.2.1"]
      - cis_csc: ["6.5"]
    references:
      - https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsystemdjournaldconf
    condition: all
    rules:
      - "f:/etc/systemd/journald.conf -> r:^ForwardToSyslog=yes"

  # 4.2.2.2 Ensure journald is configured to compress large log files
  - id: 21094
    title: Ensure journald is configured to compress large log files.
    description: >
      The journald system includes the capability of compressing overly large files to avoid filling
      up the system with logs or making the log's size unmanageable.

      Note: The main configuration file /etc/systemd/journald.conf is read before any of the
      custom *.conf files. If there are custom configs present, they override the main configuration
      parameters
    rationale: >
      Uncompressed large files may unexpectedly fill a filesystem leading to resource
      unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem
      impacts.
    remediation: >
      Edit the /etc/systemd/journald.conf file and add the following line:
      Compress=yes
    compliance:
      - cis: ["4.2.2.2"]
      - cis_csc: ["6.4"]
    references:
      - https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsystemdjournaldconf
    condition: all
    rules:
      - "f:/etc/systemd/journald.conf -> r:^Compress=yes"

  # 4.2.2.3 Ensure journald is configured to write logfiles to persistent disk
  - id: 21095
    title: Ensure journald is configured to write logfiles to persistent disk.
    description: >
      Data from journald may be stored in volatile memory or persisted locally on the server.
      Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the
      server they are protected from loss.

      Note: The main configuration file /etc/systemd/journald.conf is read before any of the
      custom *.conf files. If there are custom configs present, they override the main configuration
      parameters
    rationale: >
      Writing log data to disk will provide the ability to forensically reconstruct events which
      may have impacted the operations or security of a system even after a system crash or
      reboot.
    remediation: >
      Edit the /etc/systemd/journald.conf file and add the following line:
      Storage=persistent
    compliance:
      - cis: ["4.2.2.3"]
      - cis_csc: ["6.2", "6.3"]
    references:
      - https://github.com/konstruktoid/hardening/blob/master/systemd.adoc#etcsystemdjournaldconf
    condition: all
    rules:
      - "f:/etc/systemd/journald.conf -> r:^Storage=persistent"

  # 4.2.3 Ensure permissions on all logfiles are configured - Not implemented
  # 4.2.4 Ensure logrotate is configured - Not implemented

  # 5.1.1 Ensure cron daemon is enabled and running
  - id: 21096
    title: Ensure cron daemon is enabled and running
    description: The cron daemon is used to execute batch jobs on the system.
    rationale: >
      While there may not be user jobs that need to be run on the system, the system does have
      maintenance jobs that may include security monitoring that have to run. If another method
      for scheduling tasks is not being used, cron is used to execute them, and needs to be
      enabled and running.
    remediation: >
      Run the following command to enable and start cron:
      # systemctl --now enable cron

      OR

      Run the following command to remove cron:
      # zypper remove cronie
    compliance:
      - cis: ["5.1.1"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - "c:systemctl is-enabled cron -> r:^enabled"
      - 'c:systemctl status cron -> r:^\s*Active: active \(running\) since \.+'

  # 5.1.2 Ensure permissions on /etc/crontab are configured
  - id: 21097
    title: Ensure permissions on /etc/crontab are configured.
    description: >
      The /etc/crontab file is used by cron to control its own jobs. The commands in this item
      make sure that root is the user and group owner of the file and that only the owner can
      access the file.
    rationale: >
      This file contains information on what system jobs are run by cron. Write access to these
      files could provide unprivileged users with the ability to elevate their privileges. Read
      access to these files could provide users with the ability to gain insight on system jobs that
      run on the system and could provide them a way to gain unauthorized privileged access.
    remediation: >
      Run the following commands to set ownership and permissions on /etc/crontab:
      # chown root:root /etc/crontab
      # chmod u-x,og-rwx /etc/crontab

      OR

      Run the following command to remove cron:
      # zypper remove cronie
    compliance:
      - cis: ["5.1.2"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/crontab -> r:^Access:\s*\(0600/-rw-------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.3 Ensure permissions on /etc/cron.hourly are configured
  - id: 21098
    title: Ensure permissions on /etc/cron.hourly are configured.
    description: >
      This directory contains system cron jobs that need to run on an hourly basis. The files in
      this directory cannot be manipulated by the crontab command, but are instead edited by
      system administrators using a text editor. The commands below restrict read/write and
      search access to user and group root, preventing regular users from accessing this
      directory.
    rationale: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    remediation: >
      Run the following commands to set ownership and permissions on the /etc/cron.hourly/
      directory:
      # chown root:root /etc/cron.hourly/
      # chmod og-rwx /etc/cron.hourly/

      OR

      Run the following command to remove cron
      # zypper remove cronie
    compliance:
      - cis: ["5.1.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:stat -L /etc/cron.hourly/ -> r:^Access:\s*\(0700/drwx------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.4 Ensure permissions on /etc/cron.daily are configured
  - id: 21099
    title: Ensure permissions on /etc/cron.daily are configured.
    description: >
      The /etc/cron.daily directory contains system cron jobs that need to run on a daily basis.
      The files in this directory cannot be manipulated by the crontab command, but are instead
      edited by system administrators using a text editor. The commands below restrict
      read/write and search access to user and group root, preventing regular users from
      accessing this directory.
    rationale: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    remediation: >
      Run the following commands to set ownership and permissions on /etc/cron.daily
      directory:
      # chown root:root /etc/cron.daily
      # chmod og-rwx /etc/cron.daily

      OR

      Run the following command to remove cron:
      # zypper remove cronie
    compliance:
      - cis: ["5.1.4"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/cron.daily/ -> r:^Access:\s*\(0700/drwx------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.5 Ensure permissions on /etc/cron.weekly are configured
  - id: 21100
    title: Ensure permissions on /etc/cron.weekly are configured.
    description: >
      The /etc/cron.weekly directory contains system cron jobs that need to run on a weekly
      basis. The files in this directory cannot be manipulated by the crontab command, but are
      instead edited by system administrators using a text editor. The commands below restrict
      read/write and search access to user and group root, preventing regular users from
      accessing this directory.
    rationale: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    remediation: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    compliance:
      - cis: ["5.1.5"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/cron.weekly -> r:^Access:\s*\(0700/drwx------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.6 Ensure permissions on /etc/cron.monthly are configured
  - id: 21101
    title: Ensure permissions on /etc/cron.monthly are configured.
    description: >
      The /etc/cron.monthly directory contains system cron jobs that need to run on a monthly
      basis. The files in this directory cannot be manipulated by the crontab command, but are
      instead edited by system administrators using a text editor. The commands below restrict
      read/write and search access to user and group root, preventing regular users from
      accessing this directory.
    rationale: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    remediation: >
      Run the following commands to set ownership and permissions on /etc/cron.monthly
      directory:
      # chown root:root /etc/cron.monthly
      # chmod og-rwx /etc/cron.monthly

      OR

      Run the following command to remove cron:
      # zypper remove cronie
    compliance:
      - cis: ["5.1.6"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/cron.monthly/ -> r:^Access:\s*\(0700/drwx------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.7 Ensure permissions on /etc/cron.d are configured
  - id: 21102
    title: Ensure permissions on /etc/cron.d are configured.
    description: >
      The /etc/cron.d/ directory contains system cron jobs that need to run in a similar manner
      to the hourly, daily weekly and monthly jobs from /etc/crontab , but require more
      granular control as to when they run. The files in this directory cannot be manipulated by
      the crontab command, but are instead edited by system administrators using a text editor.
      The commands below restrict read/write and search access to user and group root,
      preventing regular users from accessing this directory.
    rationale: >
      Granting write access to this directory for non-privileged users could provide them the
      means for gaining unauthorized elevated privileges. Granting read access to this directory
      could give an unprivileged user insight in how to gain elevated privileges or circumvent
      auditing controls.
    remediation: >
      Run the following commands to set ownership and permissions on /etc/cron.d directory:
      # chown root:root /etc/cron.d
      # chmod og-rwx /etc/cron.d

      OR

      Run the following command to remove cron:
      # zypper remove cronie
    compliance:
      - cis: ["5.1.7"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/cron.d -> r:^Access:\s*\(0700/drwx------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.8 Ensure cron is restricted to authorized users
  - id: 21103
    title: Ensure cron is restricted to authorized users.
    description: >
      If cron is installed in the system, configure /etc/cron.allow to allow specific users to use
      these services. If /etc/cron.allow does not exist, then /etc/cron.deny is checked. Any
      user not specifically defined in those files is allowed to use cron. By removing the file, only
      users in /etc/cron.allow are allowed to use cron.

      Note: Even though a given user is not listed in cron.allow, cron jobs can still be run as that
      user. The cron.allow file only controls administrative access to the crontab command for
      scheduling and modifying cron jobs.
    rationale: >
      On many systems, only the system administrator is authorized to schedule cron jobs. Using
      the cron.allow file to control who can run cron jobs enforces this policy. It is easier to
      manage an allow list than a deny list. In a deny list, you could potentially add a user ID to
      the system and forget to add it to the deny files.
    remediation: >
      Run the following command to remove /etc/cron.deny:
      # rm /etc/cron.deny

      Run the following command to create /etc/cron.allow
      # touch /etc/cron.allow

      Run the following commands to set the owner and permissions on /etc/cron.allow:
      # chown root:root /etc/cron.allow
      # chmod u-x,og-rwx /etc/cron.allow

      OR

      Run the following command to remove cron
      # zypper remove cronie
    compliance:
      - cis: ["5.1.8"]
      - cis_csc: ["16"]
    condition: all
    rules:
      - "not f:/etc/cron.deny"
      - 'c:stat -L /etc/cron.allow -> r:^Access:\s*\(0600/-rw-------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.1.9 Ensure at is restricted to authorized users
  - id: 21104
    title: Ensure at is restricted to authorized users.
    description: >
      If at is installed in the system, configure /etc/at.allow to allow specific users to use these
      services. If /etc/at.allow does not exist, then /etc/at.deny is checked. Any user not
      specifically defined in those files is allowed to use at. By removing the file, only users in
      /etc/at.allow are allowed to use at.

      Note: Even though a given user is not listed in at.allow, at jobs can still be run as that user.
      The at.allow file only controls administrative access to the at command for scheduling and
      modifying at jobs.
    rationale: >
      On many systems, only the system administrator is authorized to schedule at jobs. Using
      the at.allow file to control who can run at jobs enforces this policy. It is easier to manage
      an allow list than a deny list. In a deny list, you could potentially add a user ID to the system
      and forget to add it to the deny files.
    remediation: >
      Run the following command to remove /etc/at.deny:
      # rm /etc/at.deny

      Run the following command to create /etc/at.allow
      # touch /etc/at.allow

      Run the following commands to set the owner and permissions on /etc/at.allow:
      # chown root:root /etc/at.allow
      # chmod u-x,og-rwx /etc/at.allow

      OR

      Run the following command to remove at:
      # zypper remove at
    compliance:
      - cis: ["5.1.9"]
      - cis_csc: ["16"]
    condition: all
    rules:
      - "not f:/etc/at.deny"
      - 'c:stat -L /etc/at.allow -> r:^Access:\s*\(0600/-rw-------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured
  - id: 21114
    title: Ensure permissions on /etc/ssh/sshd_config are configured
    description: >
      The /etc/ssh/sshd_config file contains configuration specifications for sshd. The
      command below sets the owner and group of the file to root.
    rationale: >
      The /etc/ssh/sshd_config file needs to be protected from unauthorized changes by nonprivileged users.
    remediation: >
      Run the following commands to set ownership and permissions on /etc/ssh/sshd_config:

      # chown root:root /etc/ssh/sshd_config
      # chmod og-rwx /etc/ssh/sshd_config
    compliance:
      - cis: ["5.2.1"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/ssh/sshd_config -> r:^Access:\s*\(0600/-rw-------\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 5.2.2 Ensure permissions on SSH private host key files are configured - Not implemented
  # 5.2.3 Ensure permissions on SSH public host key files are configured - Not implemented

  # 5.2.4 Ensure SSH access is limited
  - id: 21115
    title: Ensure SSH access is limited.
    description: >
      There are several options available to limit which users and group can access the system
      via SSH. It is recommended that at least one of the following options be leveraged:
        - AllowUsers:
          - The AllowUsers variable gives the system administrator the option of
            allowing specific users to ssh into the system. The list consists of space
            separated user names. Numeric user IDs are not recognized with this
            variable. If a system administrator wants to restrict user access further by
            only allowing the allowed users to log in from a particular host, the entry can
            be specified in the form of user@host.
        - AllowGroups:
          - The AllowGroups variable gives the system administrator the option of
            allowing specific groups of users to ssh into the system. The list consists of
            space separated group names. Numeric group IDs are not recognized with
            this variable.
        - DenyUsers:
          - The DenyUsers variable gives the system administrator the option of denying
            specific users to ssh into the system. The list consists of space separated user
            names. Numeric user IDs are not recognized with this variable. If a system
            administrator wants to restrict user access further by specifically denying a
            user's access from a particular host, the entry can be specified in the form of
            user@host.
        - DenyGroups:
          - The DenyGroups variable gives the system administrator the option of
            denying specific groups of users to ssh into the system. The list consists of
            space separated group names. Numeric group IDs are not recognized with
            this variable.
    rationale: >
      Restricting which users can remotely access the system via SSH will help ensure that only
      authorized users access the system.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set one or more of the parameter as follows:
      AllowUsers <userlist>

      OR
      AllowGroups <grouplist>

      OR
      DenyUsers <userlist>

      OR
      DenyGroups <grouplist>
    compliance:
      - cis: ["5.2.4"]
      - cis_csc: ["4.3"]
    condition: any
    rules:
      - 'c:sshd -T -> r:^\s*allowusers\s+\S+'
      - 'c:sshd -T -> r:^\s*allowgroups\s+\S+'
      - 'c:sshd -T -> r:^\s*denyusers\s+\S+'
      - 'c:sshd -T -> r:^\s*denygroups\s+\S+'

  # 5.2.5 Ensure SSH LogLevel is appropriate
  - id: 21116
    title: Ensure SSH LogLevel is appropriate.
    description: >
      INFO level is the basic level that only records login activity of SSH users. In many situations,
      such as Incident Response, it is important to determine when a particular user was active
      on a system. The logout record can eliminate those users who disconnected, which helps
      narrow the field.

      VERBOSE level specifies that login and logout activity as well as the key fingerprint for any
      SSH key used for login will be logged. This information is important for SSH key
      management, especially in legacy environments.
    rationale: >
      SSH provides several logging levels with varying amounts of verbosity. DEBUG is specifically
      not recommended other than strictly for debugging SSH communications since it provides
      so much data that it is difficult to identify important security information.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      LogLevel VERBOSE
      OR
      LogLevel INFO
    compliance:
      - cis: ["5.2.5"]
      - cis_csc: ["6.2", "6.3"]
    references:
      - https://www.ssh.com/ssh/sshd_config/
    condition: any
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && r:LogLevel\s*\t*VERBOSE'
      - 'f:$sshd_file -> !r:^\s*\t*# && r:LogLevel\s*\t*INFO'

  # 5.2.6 Ensure SSH X11 forwarding is disabled
  - id: 21117
    title: Ensure SSH X11 forwarding is disabled.
    description: >
      The X11Forwarding parameter provides the ability to tunnel X11 traffic through the
      connection to enable remote graphic connections.
    rationale: >
      Disable X11 forwarding unless there is an operational requirement to use X11 applications
      directly. There is a small risk that the remote X11 servers of users who are logged in via
      SSH with X11 forwarding could be compromised by other users on the X11 server. Note
      that even if X11 forwarding is disabled, users can always install their own forwarders.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      X11Forwarding no
    compliance:
      - cis: ["5.2.6"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*x11forwarding\s+no'

  # 5.2.7 Ensure SSH MaxAuthTries is set to 4 or less
  - id: 21118
    title: Ensure SSH MaxAuthTries is set to 4 or less.
    description: >
      The MaxAuthTries parameter specifies the maximum number of authentication attempts
      permitted per connection. When the login failure count reaches half the number, error
      messages will be written to the syslog file detailing the login failure.
    rationale: >
      Setting the MaxAuthTries parameter to a low number will minimize the risk of successful
      brute force attacks to the SSH server. While the recommended setting is 4, set the number
      based on site policy.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      MaxAuthTries 4
    compliance:
      - cis: ["5.2.7"]
      - cis_csc: ["16.13"]
    condition: all
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && n:^MaxAuthTries\s*\t*(\d+) compare <= 4'

  # 5.2.8 Ensure SSH IgnoreRhosts is enabled
  - id: 21119
    title: Ensure SSH IgnoreRhosts is enabled.
    description: >
      The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used in
      RhostsRSAAuthentication or HostbasedAuthentication.
    rationale: Setting this parameter forces users to enter a password when authenticating with ssh.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      IgnoreRhosts yes
    compliance:
      - cis: ["5.2.8"]
      - cis_csc: ["9.2"]
    condition: all
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && r:IgnoreRhosts\s*\t*yes'

  # 5.2.9 Ensure SSH HostbasedAuthentication is disabled
  - id: 21120
    title: Ensure SSH HostbasedAuthentication is disabled.
    description: >
      The HostbasedAuthentication parameter specifies if authentication is allowed through
      trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with successful public
      key client host authentication. This option only applies to SSH Protocol Version 2.
    rationale: >
      Even though the .rhosts files are ineffective if support is disabled in /etc/pam.conf,
      disabling the ability to use .rhosts files in SSH provides an additional layer of protection.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      HostbasedAuthentication no
    compliance:
      - cis: ["5.2.9"]
      - cis_csc: ["16.3"]
    condition: all
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && r:HostbasedAuthentication\s*\t*no'

  # 5.2.10 Ensure SSH root login is disabled
  - id: 21121
    title: Ensure SSH root login is disabled.
    description: >
      The PermitRootLogin parameter specifies if the root user can log in using ssh. The default
      is no.
    rationale: >
      Disallowing root logins over SSH requires system admins to authenticate using their own
      individual account, then escalating to root via sudo or su. This in turn limits opportunity for
      non-repudiation and provides a clear audit trail in the event of a security incident.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      PermitRootLogin no
    compliance:
      - cis: ["5.2.10"]
      - cis_csc: ["4.3"]
    condition: all
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && r:PermitRootLogin\s*\t*no'

  # 5.2.11 Ensure SSH PermitEmptyPasswords is disabled
  - id: 21122
    title: Ensure SSH PermitEmptyPasswords is disabled.
    description: >
      The PermitEmptyPasswords parameter specifies if the SSH server allows login to accounts
      with empty password strings.
    rationale: >
      Disallowing remote shell access to accounts that have an empty password reduces the
      probability of unauthorized access to the system
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      PermitEmptyPasswords no
    compliance:
      - cis: ["5.2.11"]
      - cis_csc: ["16.3"]
    condition: all
    rules:
      - 'f:$sshd_file -> !r:^\s*\t*# && r:PermitEmptyPasswords\s*\t*no'

  # 5.2.12 Ensure SSH PermitUserEnvironment is disabled
  - id: 21123
    title: Ensure SSH PermitUserEnvironment is disabled.
    description: >
      The PermitUserEnvironment option allows users to present environment options to the
      ssh daemon.
    rationale: >
      Permitting users the ability to set environment variables through the SSH daemon could
      potentially allow users to bypass security controls (e.g. setting an execution path that has
      ssh executing a Trojan’s programs)
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      PermitUserEnvironment no
    compliance:
      - cis: ["5.2.12"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^\s*permituserenvironment\s+no'

  # 5.2.13 Ensure only strong Ciphers are used
  - id: 21124
    title: Ensure only strong Ciphers are used.
    description: >
      This variable limits the ciphers that SSH can use during communication.
      Notes:
        - Some organizations may have stricter requirements for approved ciphers. Ensure that
          ciphers used are in compliance with site policy
        - The only "strong" ciphers currently FIPS 140-2 compliant are: aes256-ctr,aes192-
          ctr,aes128-ctr
        - CVE-2013-4548 referenced bellow applies to OpenSSH versions 6.2 and 6.3. If running
          these versions of Open SSH, Please upgrade to version 6.4 or later to fix the
          vulnerability, or disable AES-GCM in the server configuration

      The Following are the supported ciphers in openSSH 7.9:
      3des-cbc
      aes128-cbc
      aes192-cbc
      aes256-cbc
      aes128-ctr
      aes192-ctr
      aes256-ctr
      aes128-gcm@openssh.com
      aes256-gcm@openssh.com
      chacha20-poly1305@openssh.com
    rationale: >
      Weak ciphers that are used for authentication to the cryptographic module cannot be relied
      upon to provide confidentiality or integrity, and system data may be compromised.
        - The DES, Triple DES, and Blowfish ciphers, as used in SSH, have a birthday bound of
          approximately four billion blocks, which makes it easier for remote attackers to
          obtain cleartext data via a birthday attack against a long-duration encrypted session,
          aka a "Sweet32" attack
        - The RC4 algorithm, as used in the TLS protocol and SSL protocol, does not properly
          combine state data with key data during the initialization phase, which makes it
          easier for remote attackers to conduct plaintext-recovery attacks against the initial
          bytes of a stream by sniffing network traffic that occasionally relies on keys affected
          by the Invariance Weakness, and then using a brute-force approach involving LSB
          values, aka the "Bar Mitzvah" issue
        - The passwords used during an SSH session encrypted with RC4 can be recovered by
          an attacker who is able to capture and replay the session
        - Error handling in the SSH protocol; Client and Server, when using a block cipher
          algorithm in Cipher Block Chaining (CBC) mode, makes it easier for remote
          attackers to recover certain plaintext data from an arbitrary block of ciphertext in
          an SSH session via unknown vectors
        - The mm_newkeys_from_blob function in monitor_wrap.c, when an AES-GCM cipher
          is used, does not properly initialize memory for a MAC context data structure, which
          allows remote authenticated users to bypass intended ForceCommand and loginshell restrictions via packet data that provides a crafted callback address
    remediation: >
      Edit the /etc/ssh/sshd_config file add/modify the Ciphers line to contain a comma
      separated list of the site approved ciphers

      Example:
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-
      gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    compliance:
      - cis: ["5.2.13"]
      - cis_csc: ["14.4"]
    references:
      - https://nvd.nist.gov/vuln/detail/CVE-2016-2183
      - https://nvd.nist.gov/vuln/detail/CVE-2015-2808
      - https://www.kb.cert.org/vuls/id/565052
      - https://www.openssh.com/txt/cbc.adv
      - https://nvd.nist.gov/vuln/detail/CVE-2008-5161
      - https://nvd.nist.gov/vuln/detail/CVE-2013-4548
      - https://www.kb.cert.org/vuls/id/565052
      - https://www.openssh.com/txt/cbc.adv
      - SSHD_CONFIG(5)
    condition: none
    rules:
      - 'c:sshd -T -> r:^ciphers\s+ && r:3des-cbc'
      - 'c:sshd -T -> r:^ciphers\s+ && r:aes128-cbc'
      - 'c:sshd -T -> r:^ciphers\s+ && r:aes192-cbc'
      - 'c:sshd -T -> r:^ciphers\s+ && r:aes256-cbc'

  # 5.2.14 Ensure only strong MAC algorithms are used
  - id: 21125
    title: Ensure only strong MAC algorithms are used.
    description: >
      This variable limits the types of MAC algorithms that SSH can use during communication.
      Notes:
        - Some organizations may have stricter requirements for approved MACs. Ensure that
          MACs used are in compliance with site policy
        - The only "strong" MACs currently FIPS 140-2 approved are hmac-sha2-256 and hmacsha2-512

      The Supported MACs are:
      hmac-md5
      hmac-md5-96
      hmac-sha1
      hmac-sha1-96
      hmac-sha2-256
      hmac-sha2-512
      umac-64@openssh.com
      umac-128@openssh.com
      hmac-md5-etm@openssh.com
      hmac-md5-96-etm@openssh.com
      hmac-sha1-etm@openssh.com
      hmac-sha1-96-etm@openssh.com
      hmac-sha2-256-etm@openssh.com
      hmac-sha2-512-etm@openssh.com
      umac-64-etm@openssh.com
      umac-128-etm@openssh.com
    rationale: >
      MD5 and 96-bit MAC algorithms are considered weak and have been shown to increase
      exploitability in SSH downgrade attacks. Weak algorithms continue to have a great deal of
      attention as a weak spot that can be exploited with expanded computing power. An
      attacker that breaks the algorithm could take advantage of a MiTM position to decrypt the
      SSH tunnel and capture credentials and information
    remediation: >
      Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma
      separated list of the site approved MACs

      Example:
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-
      512,hmac-sha2-256
    compliance:
      - cis: ["5.2.14"]
      - cis_csc: ["14.4", "16.5"]
    references:
      - http://www.mitls.org/pages/attacks/SLOTH
      - SSHD_CONFIG(5)
    condition: none
    rules:
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-md5'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-md5-96'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-ripemd160'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-sha1'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-sha1-96'
      - 'c:sshd -T -> r:^macs\s+ && r:umac-64@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:umac-128@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-md5-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-md5-96-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-ripemd160-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-sha1-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:hmac-sha1-96-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:umac-64-etm@openssh.com'
      - 'c:sshd -T -> r:^macs\s+ && r:umac-128-etm@openssh.com'

  # 5.2.15 Ensure only strong Key Exchange algorithms are used
  - id: 21126
    title: Ensure only strong Key Exchange algorithms are used.
    description: >
      Key exchange is any method in cryptography by which cryptographic keys are exchanged
      between two parties, allowing use of a cryptographic algorithm. If the sender and receiver
      wish to exchange encrypted messages, each must be equipped to encrypt messages to be
      sent and decrypt messages received

      Notes:
      Kex algorithms have a higher preference the earlier they appear in the list
        - Some organizations may have stricter requirements for approved Key exchange
          algorithms. Ensure that Key exchange algorithms used are in compliance with site
          policy.
        - The only Key Exchange Algorithms currently FIPS 140-2 approved are: ecdh-sha2-
          nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchangesha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffiehellman-group14-sha256

      The Key Exchange algorithms supported by OpenSSH 7.9 are:
      curve25519-sha256
      curve25519-sha256@libssh.org
      diffie-hellman-group1-sha1
      diffie-hellman-group14-sha1
      diffie-hellman-group14-sha256
      diffie-hellman-group16-sha512
      diffie-hellman-group18-sha512
      diffie-hellman-group-exchange-sha1
      diffie-hellman-group-exchange-sha256
      ecdh-sha2-nistp256
      ecdh-sha2-nistp384
      ecdh-sha2-nistp521
    rationale: >
      Key exchange methods that are considered weak should be removed. A key exchange
      method may be weak because too few bits are used, or the hashing algorithm is considered
      too weak. Using weak algorithms could expose connections to man-in-the-middle attacks
    remediation: >
      Edit the /etc/ssh/sshd_config file add/modify the KexAlgorithms line to contain a comma
      separated list of the site approved key exchange algorithms

      Example
      KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellmangroup14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-
      sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffiehellman-group-exchange-sha256
    compliance:
      - cis: ["5.2.15"]
      - cis_csc: ["14.4"]
    condition: none
    rules:
      - 'c:sshd -T -> r:^kexalgorithms\s+ && r:diffie-hellman-group1-sha1'
      - 'c:sshd -T -> r:^kexalgorithms\s+ && r:diffie-hellman-group14-sha1'
      - 'c:sshd -T -> r:^kexalgorithms\s+ && r:diffie-hellman-group-exchange-sha1'

  # 5.2.16 Ensure SSH Idle Timeout Interval is configured
  - id: 21127
    title: Ensure SSH Idle Timeout Interval is configured
    description: >
      The two options ClientAliveInterval and ClientAliveCountMax control the timeout of
      ssh sessions.
        - ClientAliveInterval sets a timeout interval in seconds after which if no data has
          been received from the client, sshd will send a message through the encrypted
          channel to request a response from the client. The default is 0, indicating that these
          messages will not be sent to the client.
        - ClientAliveCountMax sets the number of client alive messages which may be sent
          without sshd receiving any messages back from the client. If this threshold is
          reached while client alive messages are being sent, sshd will disconnect the client,
          terminating the session. The default value is 3.
            - The client alive messages are sent through the encrypted channel
            - Setting ClientAliveCountMax to 0 disables connection termination

      Example: If the ClientAliveInterval is set to 15 seconds and the ClientAliveCountMax is
      set to 3, the client ssh session will be terminated after 45 seconds of idle time.
    rationale: >
      Having no timeout value associated with a connection could allow an unauthorized user
      access to another user's ssh session (e.g. user walks away from their computer and doesn't
      lock the screen). Setting a timeout value reduces this risk.
       The recommended ClientAliveInterval setting is 300 seconds (5 minutes)
       The recommended ClientAliveCountMax setting is 3
       The ssh session would send three keep alive messages at 5 minute intervals. If no
      response is received after the third keep alive message, the ssh session would be
      terminated after 15 minutes.
    remediation: >
      Having no timeout value associated with a connection could allow an unauthorized user
      access to another user's ssh session (e.g. user walks away from their computer and doesn't
      lock the screen). Setting a timeout value reduces this risk.
        - The recommended ClientAliveInterval setting is 300 seconds (5 minutes)
        - The recommended ClientAliveCountMax setting is 3
        - The ssh session would send three keep alive messages at 5 minute intervals. If no
          response is received after the third keep alive message, the ssh session would be
          terminated after 15 minutes.
    compliance:
      - cis: ["5.2.16"]
      - cis_csc: ["16.11"]
    references:
      - https://man.openbsd.org/sshd_config
    condition: all
    rules:
      - 'c:sshd -T -> n:^clientaliveinterval\s+(\d+) compare >= 1'
      - 'c:sshd -T -> n:^clientaliveinterval\s+(\d+) compare <= 300'
      - 'c:sshd -T -> n:^ClientAliveCountMax\s+(\d+) compare <= 3'

  # 5.2.17 Ensure SSH LoginGraceTime is set to one minute or less
  - id: 21128
    title: Ensure SSH LoginGraceTime is set to one minute or less.
    description: >
      The LoginGraceTime parameter specifies the time allowed for successful authentication to
      the SSH server. The longer the Grace period is the more open unauthenticated connections
      can exist. Like other session controls in this session the Grace Period should be limited to
      appropriate organizational limits to ensure the service is available for needed access.
    rationale: >
      Setting the LoginGraceTime parameter to a low number will minimize the risk of successful
      brute force attacks to the SSH server. It will also limit the number of concurrent
      unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set
      the number based on site policy.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:
      LoginGraceTime 60
    compliance:
      - cis: ["5.2.17"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> n:^logingracetime\s+(\d+) compare >= 1'
      - 'c:sshd -T -> n:^logingracetime\s+(\d+) compare <= 60'

  # 5.2.18 Ensure SSH warning banner is configured
  - id: 21129
    title: Ensure SSH warning banner is configured.
    description: >
      The Banner parameter specifies a file whose contents must be sent to the remote user
      before authentication is permitted. By default, no banner is displayed.
    rationale: >
      Banners are used to warn connecting users of the particular site's policy regarding
      connection. Presenting a warning message prior to the normal user login may assist the
      prosecution of trespassers on the computer system.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:

      Banner /etc/issue.net
    compliance:
      - cis: ["5.2.18"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^banner\s+/etc/issue.net'

  # 5.2.19 Ensure SSH PAM is enabled
  - id: 21130
    title: Ensure SSH PAM is enabled.
    description: >
      UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will
      enable PAM authentication using ChallengeResponseAuthentication and
      PasswordAuthentication in addition to PAM account and session module processing for all
      authentication types
    rationale: >
      When usePAM is set to yes, PAM runs through account and session types properly. This is
      important if you want to restrict access to services based off of IP, time or other factors of
      the account. Additionally, you can make sure users inherit certain environment variables
      on login or disallow access to the server
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:

      UsePAM yes
    compliance:
      - cis: ["5.2.19"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^usepam\s+yes'

  # 5.2.20 Ensure SSH AllowTcpForwarding is disabled
  - id: 21131
    title: Ensure SSH AllowTcpForwarding is disabled.
    description: >
      SSH port forwarding is a mechanism in SSH for tunneling application ports from the client
      to the server, or servers to clients. It can be used for adding encryption to legacy
      applications, going through firewalls, and some system administrators and IT professionals
      use it for opening backdoors into the internal network from their home machines
    rationale: >
      Leaving port forwarding enabled can expose the organization to security risks and backdoors.

      SSH connections are protected with strong encryption. This makes their contents invisible
      to most deployed network monitoring and traffic filtering solutions. This invisibility carries
      considerable risk potential if it is used for malicious purposes such as data exfiltration.
      Cybercriminals or malware could exploit SSH to hide their unauthorized communications,
      or to exfiltrate stolen data from the target network
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:

      AllowTcpForwarding no
    compliance:
      - cis: ["5.2.20"]
      - cis_csc: ["9.2"]
    references:
      - https://www.ssh.com/ssh/tunneling/example
    condition: all
    rules:
      - 'c:sshd -T -> r:^allowtcpforwarding\s+no'

  # 5.2.21 Ensure SSH MaxStartups is configured
  - id: 21132
    title: Ensure SSH MaxStartups is configured.
    description: >
      The MaxStartups parameter specifies the maximum number of concurrent unauthenticated
      connections to the SSH daemon.
    rationale: >
      To protect a system from denial of service due to a large number of pending authentication
      connection attempts, use the rate limiting function of MaxStartups to protect availability of
      sshd logins and prevent overwhelming the daemon.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:

      maxstartups 10:30:60
    compliance:
      - cis: ["5.2.21"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> r:^maxstartups\s+10:30:60\s*$'

  # 5.2.22 Ensure SSH MaxSessions is limited
  - id: 21133
    title: Ensure SSH MaxSessions is limited.
    description: >
      The MaxSessions parameter specifies the maximum number of open sessions permitted
      from a given connection.
    rationale: >
      To protect a system from denial of service due to a large number of concurrent sessions,
      use the rate limiting function of MaxSessions to protect availability of sshd logins and
      prevent overwhelming the daemon.
    remediation: >
      Edit the /etc/ssh/sshd_config file to set the parameter as follows:

      MaxSessions 10
    compliance:
      - cis: ["5.2.22"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'c:sshd -T -> n:^maxsessions\s+(\d+) compare <= 10'

  # 5.3.1 Ensure password creation requirements are configured - Not implemented
  # 5.3.2 Ensure lockout for failed password attempts is configured - Not implemented

  # 5.3.3 Ensure password reuse is limited
  - id: 21134
    title: Ensure password reuse is limited.
    description: >
      The /etc/security/opasswd file stores the users' old passwords and can be checked to
      ensure that users are not recycling recent passwords.

      Notes:
      - Additional module options may be set, recommendation only covers those listed here.
      - This setting only applies to local accounts.
      - This option is configured with the remember=n module option in /etc/pam.d/commonpassword
    rationale: >
      Forcing users not to reuse their past passwords make it less likely that an attacker will be
      able to guess the password.
    remediation: >
      Run the following command:
      # pam-config -a --pwhistory --pwhistory-remember=5

      OR

      Edit the file /etc/pam.d/common-password to include the remember= option and conform to
      site policy as shown:
      password required pam_pwhistory.so remember=5
    compliance:
      - cis: ["5.3.3"]
      - cis_csc: ["16"]
    condition: any
    rules:
      - 'f:/etc/pam.d/common-password -> n:^\s*password\t+requisite\t+pam_pwhistory\.so\t+remember\s*=\s*(\d+) compare >= 5'
      - 'f:/etc/pam.d/common-password -> n:^\s*password\t+required\t+pam_pwhistory\.so\t+remember\s*=\s*(\d+) compare >= 5'

  # 5.4.1.1 Ensure password hashing algorithm is SHA-512
  - id: 21135
    title: Ensure password hashing algorithm is SHA-512.
    description: >
      Login passwords are hashed and stored in the /etc/shadow file.

      Note: These changes only apply to accounts configured on the local system.
    rationale: >
      The SHA-512 algorithm provides much stronger hashing than MD5, thus providing
      additional protection to the system by increasing the level of effort for an attacker to
      successfully determine passwords.
    remediation: >
      Edit the /etc/login.defs file and modify ENCRYPT_METHOD to SHA512:
      ENCRYPT_METHOD sha512

      Notes:
        - Any system accounts that need to be expired should be carefully done separately by the
          system administrator to prevent any potential problems
        - If it is determined that the password algorithm being used is not SHA-512, once it is
          changed, it is recommended that all user ID's be immediately expired and forced to
          change their passwords on next login, In accordance with local site policies
        - To accomplish this, the following command can be used
          # awk -F: '( $3<'"$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)"' &&
          $1 != "nfsnobody" ) { print $1 }' /etc/passwd | xargs -n 1 chage -d 0
    compliance:
      - cis: ["5.4.1.1"]
      - cis_csc: ["16.4"]
    condition: all
    rules:
      - 'f:/etc/login.defs -> r:^\s*ENCRYPT_METHOD\s+SHA512'

  # 5.4.1.2 Ensure password expiration is 365 days or less - Not implemented
  # 5.4.1.3 Ensure minimum days between password changes is configured - Not implemented
  # 5.4.1.4 Ensure password expiration warning days is 7 or more - Not implemented
  # 5.4.1.5 Ensure inactive password lock is 30 days or less - Not implemented
  # 5.4.1.6 Ensure all users last password change date is in the past - Not implemented
  # 5.4.2 Ensure system accounts are secured - Not implemented

  # 5.4.3 Ensure default group for the root account is GID 0
  - id: 21136
    title: Ensure default group for the root account is GID 0
    description: >
      The usermod command can be used to specify which group the root user belongs to. This
      affects permissions of files that are created by the root user.
    rationale: >
      Using GID 0 for the root account helps prevent root -owned files from accidentally
      becoming accessible to non-privileged users.
    remediation: >
      Run the following command to set the root user default group to GID 0 :
      # usermod -g 0 root
    compliance:
      - cis: ["5.4.3"]
      - cis_csc: ["5.1"]
    condition: all
    rules:
      - 'f:/etc/passwd -> r:^root:\S+:\S+:0:'

  # 5.4.4 Ensure default user shell timeout is configured - Not implemented
  # 5.4.5 Ensure default user umask is configured - Not implemented
  # 5.5 Ensure root login is restricted to system console - Not implemented
  # 5.6 Ensure access to the su command is restricted - Not implemented
  # 6.1.1 Audit system file permissions

  # 6.1.2 Ensure permissions on /etc/passwd are configured
  - id: 21137
    title: Ensure permissions on /etc/passwd are configured.
    description: >
      The /etc/passwd file contains user account information that is used by many system
      utilities and therefore must be readable for these utilities to operate.
    rationale: >
      It is critical to ensure that the /etc/passwd file is protected from unauthorized write
      access. Although it is protected by default, the file permissions could be changed either
      inadvertently or through malicious actions.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/passwd:

      # chown root:root /etc/passwd
      # chmod u-x,g-wx,o-wx /etc/passwd
    compliance:
      - cis: ["6.1.2"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/passwd -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 6.1.3 Ensure permissions on /etc/shadow are configured
  - id: 21138
    title: Ensure permissions on /etc/shadow are configured.
    description: >
      The /etc/shadow file is used to store the information about user accounts that is critical to
      the security of those accounts, such as the hashed password and other security
      information.
    rationale: >
      If attackers can gain read access to the /etc/shadow file, they can easily run a password
      cracking program against the hashed password to break it. Other security information that
      is stored in the /etc/shadow file (such as expiration) could also be useful to subvert the
      user accounts.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/shadow:

      # chown root:root /etc/shadow
      # chmod u-x,g-wx,o-rwx /etc/shadow
    compliance:
      - cis: ["6.1.3"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/shadow -> r:^Access:\s*\(0640/-rw-r-----\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*15/\s*shadow\)'

  # 6.1.4 Ensure permissions on /etc/group are configured
  - id: 21139
    title: Ensure permissions on /etc/group are configured.
    description: >
      The /etc/group file contains a list of all the valid groups defined in the system. The
      command below allows read/write access for root and read access for everyone else.
    rationale: >
      The /etc/group file needs to be protected from unauthorized changes by non-privileged
      users, but needs to be readable as this information is used with many non-privileged
      programs.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/group :

      # chown root:root /etc/group
      # chmod u-x,g-wx,o-wx /etc/group
    compliance:
      - cis: ["6.1.4"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/group -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 6.1.5 Ensure permissions on /etc/passwd- are configured
  - id: 21140
    title: Ensure permissions on /etc/passwd- are configured.
    description: The /etc/passwd- file contains backup user account information.
    rationale: >
      It is critical to ensure that the /etc/passwd- file is protected from unauthorized access.
      Although it is protected by default, the file permissions could be changed either
      inadvertently or through malicious actions.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/passwd- :

      # chown root:root /etc/passwd-
      # chmod u-x,go-wx /etc/passwd
    compliance:
      - cis: ["6.1.5"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/passwd -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 6.1.6 Ensure permissions on /etc/shadow- are configured
  - id: 21141
    title: Ensure permissions on /etc/shadow- are configured
    description: >
      The /etc/shadow- file is used to store backup information about user accounts that is
      critical to the security of those accounts, such as the hashed password and other security
      information.
    rationale: >
      It is critical to ensure that the /etc/shadow- file is protected from unauthorized access.
      Although it is protected by default, the file permissions could be changed either
      inadvertently or through malicious actions.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/shadow-:

      # chown root:shadow /etc/shadow-
      # chmod u-x,g-wx,o-rwx /etc/shadow
    compliance:
      - cis: ["6.1.6"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/shadow- -> r:^Access:\s*\(0640/-rw-r-----\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*15/\s*shadow\)'

  # 6.1.7 Ensure permissions on /etc/group- are configured
  - id: 21142
    title: Ensure permissions on /etc/group- are configured.
    description: The /etc/group- file contains a backup list of all the valid groups defined in the system.
    rationale: >
      It is critical to ensure that the /etc/group- file is protected from unauthorized access.
      Although it is protected by default, the file permissions could be changed either
      inadvertently or through malicious actions.
    remediation: >
      Run the following commands to set owner, group, and permissions on /etc/group-:

      # chown root:root /etc/group-
      # chmod u-x,go-wx /etc/group-
    compliance:
      - cis: ["6.1.7"]
      - cis_csc: ["14.6"]
    condition: all
    rules:
      - 'c:stat -L /etc/group- -> r:^Access:\s*\(0644/-rw-r--r--\)\s*Uid:\s*\(\s*0/\s*root\)\s*Gid:\s*\(\s*0/\s*root\)'

  # 6.1.8 Ensure no world writable files exist - Not implemented
  # 6.1.9 Ensure no unowned files or directories exist - Not implemented
  # 6.1.10 Ensure no ungrouped files or directories exist - Not implemented
  # 6.1.11 Audit SUID executables - Not implemented
  # 6.1.12 Audit SGID executables - Not implemented

  # 6.2.1 Ensure accounts in /etc/passwd use shadowed passwords
  - id: 21143
    title: Ensure accounts in /etc/passwd use shadowed passwords.
    description: >
      Local accounts can uses shadowed passwords. With shadowed passwords, The passwords
      are saved in shadow password file, /etc/shadow, encrypted by a salted one-way hash.
      Accounts with a shadowed password have an x in the second field in /etc/passwd.
    rationale: >
      The /etc/passwd file also contains information like user ID's and group ID's that are used
      by many system programs. Therefore, the /etc/passwd file must remain world readable. In
      spite of encoding the password with a randomly-generated one-way hash function, an
      attacker could still break the system if they got access to the /etc/passwd file. This can be
      mitigated by using shadowed passwords, thus moving the passwords in the /etc/passwd
      file to /etc/shadow. The /etc/shadow file is set so only root will be able to read and write.
      This helps mitigate the risk of an attacker gaining access to the encoded passwords with
      which to perform a dictionary attack.

      Notes:
        - All accounts must have passwords or be locked to prevent the account from being used
          by an unauthorized user.
        - A user account with an empty second field in /etc/passwd allows the account to be
          logged into by providing only the username.
    remediation: >
      If any accounts in the /etc/passwd file do not have a single x in the password field, run the
      following command to set these accounts to use shadowed passwords:

      # sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd

      Investigate to determine if the account is logged in and what it is being used for, to
      determine if it needs to be forced off.
    compliance:
      - cis: ["6.2.1"]
      - cis_csc: ["4.4"]
    condition: none
    rules:
      - 'f:/etc/passwd -> !r:^\.+:x:'

  # 6.2.2 Ensure /etc/shadow password fields are not empty
  - id: 21144
    title: Ensure /etc/shadow password fields are not empty.
    description: >
      An account with an empty password field means that anybody may log in as that user
      without providing a password.
    rationale: >
      All accounts must have passwords or be locked to prevent the account from being used by
      an unauthorized user.
    remediation: >
      If any accounts in the /etc/shadow file do not have a password, run the following command
      to lock the account until it can be determined why it does not have a password:

      # passwd -l <username>

      Also, check to see if the account is logged in and investigate what it is being used for to
      determine if it needs to be forced off.
    compliance:
      - cis: ["6.2.2"]
      - cis_csc: ["4.4"]
    condition: none
    rules:
      - "c:grep -E ^[^:]+:: /etc/shadow -> r:::"

  # 6.2.3 Ensure root is the only UID 0 account
  - id: 21145
    title: Ensure root is the only UID 0 account.
    description: Any account with UID 0 has superuser privileges on the system.
    rationale: >
      This access must be limited to only the default root account and only from the system
      console. Administrative access must be through an unprivileged account using an approved
      mechanism as noted in Item 5.6 Ensure access to the su command is restricted.
    remediation: >
      Remove any users other than root with UID 0 or assign them a new UID if appropriate.
    compliance:
      - cis: ["6.2.3"]
      - cis_csc: ["5.1"]
    condition: none
    rules:
      - 'f:/etc/passwd -> !r:^\s*\t*# && !r:^\s*\t*root: && r:^\w+:\w+:0:'
# 6.2.4 Ensure root PATH Integrity - Not implemented
# 6.2.5 Ensure all users' home directories exist - Not implemented
# 6.2.6 Ensure users' home directories permissions are 750 or more restrictive - Not implemented
# 6.2.7 Ensure users own their home directories - Not implemented
# 6.2.8 Ensure users' dot files are not group or world writable - Not implemented
# 6.2.9 6.2.9 Ensure no users have .forward files - Not implemented
# 6.2.10 Ensure no users have .netrc files - Not implemented
# 6.2.11 Ensure users' .netrc Files are not group or world accessible - Not implemented
# 6.2.12 Ensure no users have .rhosts files - Not implemented
# 6.2.13 Ensure all groups in /etc/passwd exist in /etc/group - Not implemented
# 6.2.14 Ensure no duplicate UIDs exist - Not implemented
# 6.2.15 Ensure no duplicate GIDs exist - Not implemented
# 6.2.16 Ensure no duplicate user names exist - Not implemented
# 6.2.17 Ensure no duplicate group names exist - Not implemented
# 6.2.18 Ensure shadow group is empty - Not implemented
