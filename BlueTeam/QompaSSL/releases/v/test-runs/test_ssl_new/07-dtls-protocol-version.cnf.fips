# Generated with generate_ssl_tests.pl

num_tests = 32

test-0 = 0-version-negotiation
test-1 = 1-version-negotiation
test-2 = 2-version-negotiation
test-3 = 3-version-negotiation
test-4 = 4-version-negotiation
test-5 = 5-version-negotiation
test-6 = 6-version-negotiation
test-7 = 7-version-negotiation
test-8 = 8-version-negotiation
test-9 = 9-version-negotiation
test-10 = 10-version-negotiation
test-11 = 11-version-negotiation
test-12 = 12-version-negotiation
test-13 = 13-version-negotiation
test-14 = 14-version-negotiation
test-15 = 15-version-negotiation
test-16 = 16-version-negotiation
test-17 = 17-version-negotiation
test-18 = 18-version-negotiation
test-19 = 19-version-negotiation
test-20 = 20-version-negotiation
test-21 = 21-version-negotiation
test-22 = 22-version-negotiation
test-23 = 23-version-negotiation
test-24 = 24-version-negotiation
test-25 = 25-version-negotiation
test-26 = 26-version-negotiation
test-27 = 27-version-negotiation
test-28 = 28-version-negotiation
test-29 = 29-version-negotiation
test-30 = 30-version-negotiation
test-31 = 31-version-negotiation
# ===========================================================

[0-version-negotiation]
ssl_conf = 0-version-negotiation-ssl

[0-version-negotiation-ssl]
server = 0-version-negotiation-server
client = 0-version-negotiation-client

[0-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[0-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-0]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[1-version-negotiation]
ssl_conf = 1-version-negotiation-ssl

[1-version-negotiation-ssl]
server = 1-version-negotiation-server
client = 1-version-negotiation-client

[1-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[1-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-1]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[2-version-negotiation]
ssl_conf = 2-version-negotiation-ssl

[2-version-negotiation-ssl]
server = 2-version-negotiation-server
client = 2-version-negotiation-client

[2-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[2-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-2]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[3-version-negotiation]
ssl_conf = 3-version-negotiation-ssl

[3-version-negotiation-ssl]
server = 3-version-negotiation-server
client = 3-version-negotiation-client

[3-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[3-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-3]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[4-version-negotiation]
ssl_conf = 4-version-negotiation-ssl

[4-version-negotiation-ssl]
server = 4-version-negotiation-server
client = 4-version-negotiation-client

[4-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[4-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-4]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[5-version-negotiation]
ssl_conf = 5-version-negotiation-ssl

[5-version-negotiation-ssl]
server = 5-version-negotiation-server
client = 5-version-negotiation-client

[5-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[5-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-5]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[6-version-negotiation]
ssl_conf = 6-version-negotiation-ssl

[6-version-negotiation-ssl]
server = 6-version-negotiation-server
client = 6-version-negotiation-client

[6-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[6-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-6]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[7-version-negotiation]
ssl_conf = 7-version-negotiation-ssl

[7-version-negotiation-ssl]
server = 7-version-negotiation-server
client = 7-version-negotiation-client

[7-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[7-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-7]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[8-version-negotiation]
ssl_conf = 8-version-negotiation-ssl

[8-version-negotiation-ssl]
server = 8-version-negotiation-server
client = 8-version-negotiation-client

[8-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[8-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-8]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[9-version-negotiation]
ssl_conf = 9-version-negotiation-ssl

[9-version-negotiation-ssl]
server = 9-version-negotiation-server
client = 9-version-negotiation-client

[9-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[9-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-9]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[10-version-negotiation]
ssl_conf = 10-version-negotiation-ssl

[10-version-negotiation-ssl]
server = 10-version-negotiation-server
client = 10-version-negotiation-client

[10-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[10-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-10]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[11-version-negotiation]
ssl_conf = 11-version-negotiation-ssl

[11-version-negotiation-ssl]
server = 11-version-negotiation-server
client = 11-version-negotiation-client

[11-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[11-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-11]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[12-version-negotiation]
ssl_conf = 12-version-negotiation-ssl

[12-version-negotiation-ssl]
server = 12-version-negotiation-server
client = 12-version-negotiation-client

[12-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[12-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-12]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[13-version-negotiation]
ssl_conf = 13-version-negotiation-ssl

[13-version-negotiation-ssl]
server = 13-version-negotiation-server
client = 13-version-negotiation-client

[13-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[13-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-13]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[14-version-negotiation]
ssl_conf = 14-version-negotiation-ssl

[14-version-negotiation-ssl]
server = 14-version-negotiation-server
client = 14-version-negotiation-client

[14-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[14-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-14]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[15-version-negotiation]
ssl_conf = 15-version-negotiation-ssl

[15-version-negotiation-ssl]
server = 15-version-negotiation-server
client = 15-version-negotiation-client

[15-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[15-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-15]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS


# ===========================================================

[16-version-negotiation]
ssl_conf = 16-version-negotiation-ssl

[16-version-negotiation-ssl]
server = 16-version-negotiation-server
client = 16-version-negotiation-client

[16-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[16-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-16]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[17-version-negotiation]
ssl_conf = 17-version-negotiation-ssl

[17-version-negotiation-ssl]
server = 17-version-negotiation-server
client = 17-version-negotiation-client

[17-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[17-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-17]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[18-version-negotiation]
ssl_conf = 18-version-negotiation-ssl

[18-version-negotiation-ssl]
server = 18-version-negotiation-server
client = 18-version-negotiation-client

[18-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[18-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-18]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[19-version-negotiation]
ssl_conf = 19-version-negotiation-ssl

[19-version-negotiation-ssl]
server = 19-version-negotiation-server
client = 19-version-negotiation-client

[19-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[19-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-19]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[20-version-negotiation]
ssl_conf = 20-version-negotiation-ssl

[20-version-negotiation-ssl]
server = 20-version-negotiation-server
client = 20-version-negotiation-client

[20-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[20-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-20]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[21-version-negotiation]
ssl_conf = 21-version-negotiation-ssl

[21-version-negotiation-ssl]
server = 21-version-negotiation-server
client = 21-version-negotiation-client

[21-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[21-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-21]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[22-version-negotiation]
ssl_conf = 22-version-negotiation-ssl

[22-version-negotiation-ssl]
server = 22-version-negotiation-server
client = 22-version-negotiation-client

[22-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[22-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-22]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[23-version-negotiation]
ssl_conf = 23-version-negotiation-ssl

[23-version-negotiation-ssl]
server = 23-version-negotiation-server
client = 23-version-negotiation-client

[23-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[23-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-23]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[24-version-negotiation]
ssl_conf = 24-version-negotiation-ssl

[24-version-negotiation-ssl]
server = 24-version-negotiation-server
client = 24-version-negotiation-client

[24-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[24-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-24]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[25-version-negotiation]
ssl_conf = 25-version-negotiation-ssl

[25-version-negotiation-ssl]
server = 25-version-negotiation-server
client = 25-version-negotiation-client

[25-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[25-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-25]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[26-version-negotiation]
ssl_conf = 26-version-negotiation-ssl

[26-version-negotiation-ssl]
server = 26-version-negotiation-server
client = 26-version-negotiation-client

[26-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[26-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-26]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[27-version-negotiation]
ssl_conf = 27-version-negotiation-ssl

[27-version-negotiation-ssl]
server = 27-version-negotiation-server
client = 27-version-negotiation-client

[27-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[27-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-27]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[28-version-negotiation]
ssl_conf = 28-version-negotiation-ssl

[28-version-negotiation-ssl]
server = 28-version-negotiation-server
client = 28-version-negotiation-client

[28-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[28-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-28]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[29-version-negotiation]
ssl_conf = 29-version-negotiation-ssl

[29-version-negotiation-ssl]
server = 29-version-negotiation-server
client = 29-version-negotiation-client

[29-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[29-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-29]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[30-version-negotiation]
ssl_conf = 30-version-negotiation-ssl

[30-version-negotiation-ssl]
server = 30-version-negotiation-server
client = 30-version-negotiation-client

[30-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MaxProtocol = DTLSv1.2
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[30-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-30]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


# ===========================================================

[31-version-negotiation]
ssl_conf = 31-version-negotiation-ssl

[31-version-negotiation-ssl]
server = 31-version-negotiation-server
client = 31-version-negotiation-client

[31-version-negotiation-server]
Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem

[31-version-negotiation-client]
CipherString = DEFAULT:@SECLEVEL=0
MinProtocol = DTLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-31]
ExpectedProtocol = DTLSv1.2
ExpectedResult = Success
Method = DTLS
UseSCTP = Yes


