.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "OSSL_CMP_ITAV_NEW_CACERTS 3ossl"
.TH OSSL_CMP_ITAV_NEW_CACERTS 3ossl 2024-06-04 3.3.1 OpenSSL
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
OSSL_CMP_ITAV_new_caCerts,
OSSL_CMP_ITAV_get0_caCerts,
OSSL_CMP_ITAV_new_rootCaCert,
OSSL_CMP_ITAV_get0_rootCaCert,
OSSL_CMP_ITAV_new_rootCaKeyUpdate,
OSSL_CMP_ITAV_get0_rootCaKeyUpdate
\&\- CMP utility functions for handling specific genm and genp messages
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/cmp.h>
\&
\& OSSL_CMP_ITAV *OSSL_CMP_ITAV_new_caCerts(const STACK_OF(X509) *caCerts);
\& int OSSL_CMP_ITAV_get0_caCerts(const OSSL_CMP_ITAV *itav, STACK_OF(X509) **out);
\&
\& OSSL_CMP_ITAV *OSSL_CMP_ITAV_new_rootCaCert(const X509 *rootCaCert);
\& int OSSL_CMP_ITAV_get0_rootCaCert(const OSSL_CMP_ITAV *itav, X509 **out);
\& OSSL_CMP_ITAV *OSSL_CMP_ITAV_new_rootCaKeyUpdate(const X509 *newWithNew,
\&                                                  const X509 *newWithOld,
\&                                                  const X509 *oldWithNew);
\& int OSSL_CMP_ITAV_get0_rootCaKeyUpdate(const OSSL_CMP_ITAV *itav,
\&                                        X509 **newWithNew,
\&                                        X509 **newWithOld,
\&                                        X509 **oldWithNew);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
ITAV is short for InfoTypeAndValue.
.PP
\&\fBOSSL_CMP_ITAV_new_caCerts()\fR creates an \fBOSSL_CMP_ITAV\fR structure of type
\&\fBcaCerts\fR and fills it with a copy of the provided list of certificates.
The \fIcaCerts\fR argument may be NULL or contain any number of certificates.
.PP
\&\fBOSSL_CMP_ITAV_get0_caCerts()\fR requires that \fIitav\fR has type \fBcaCerts\fR.
It assigns NULL to \fI*out\fR if there are no CA certificates in \fIitav\fR, otherwise
the internal pointer of type \fBSTACK_OF(X509)\fR with the certificates present.
.PP
\&\fBOSSL_CMP_ITAV_new_rootCaCert()\fR creates a new \fBOSSL_CMP_ITAV\fR structure
of type \fBrootCaCert\fR that includes the optionally given certificate.
.PP
\&\fBOSSL_CMP_ITAV_get0_rootCaCert()\fR requires that \fIitav\fR has type \fBrootCaCert\fR.
It assigns NULL to \fI*out\fR if no certificate is included in \fIitav\fR, otherwise
the internal pointer to the certificate contained in the infoValue field.
.PP
\&\fBOSSL_CMP_ITAV_new_rootCaKeyUpdate()\fR creates a new \fBOSSL_CMP_ITAV\fR structure
of type \fBrootCaKeyUpdate\fR that includes an RootCaKeyUpdateContent structure
with the optional \fInewWithNew\fR, \fInewWithOld\fR, and \fIoldWithNew\fR certificates.
An RootCaKeyUpdateContent structure is included only if \fInewWithNew\fR
is not NULL.
.PP
\&\fBOSSL_CMP_ITAV_get0_rootCaKeyUpdate()\fR requires that \fIitav\fR has infoType
\&\fBrootCaKeyUpdate\fR.
If an update of a root CA certificate is included,
it assigns to \fI*newWithNew\fR the internal pointer
to the certificate contained in the newWithNew infoValue sub-field of \fIitav\fR.
If \fInewWithOld\fR is not NULL, it assigns to \fI*newWithOld\fR the internal pointer
to the certificate contained in the newWithOld infoValue sub-field of \fIitav\fR.
If \fIoldWithNew\fR is not NULL, it assigns to \fI*oldWithNew\fR the internal pointer
to the certificate contained in the oldWithNew infoValue sub-field of \fIitav\fR.
Each of these pointers will be set to NULL if no root CA certificate update 
is present or the respective sub-field is not included.
.SH NOTES
.IX Header "NOTES"
CMP is defined in RFC 4210.
.SH "RETURN VALUES"
.IX Header "RETURN VALUES"
\&\fBOSSL_CMP_ITAV_new_caCerts()\fR,
\&\fBOSSL_CMP_ITAV_new_rootCaCert()\fR, and \fBOSSL_CMP_ITAV_new_rootCaKeyUpdate()\fR
return a pointer to the new ITAV structure on success, or NULL on error.
.PP
\&\fBOSSL_CMP_ITAV_get0_caCerts()\fR,
\&\fBOSSL_CMP_ITAV_get0_rootCaCert()\fR, and \fBOSSL_CMP_ITAV_get0_rootCaKeyUpdate()\fR
return 1 on success, 0 on error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBOSSL_CMP_ITAV_create\fR\|(3) and \fBOSSL_CMP_ITAV_get0_type\fR\|(3)
.SH HISTORY
.IX Header "HISTORY"
\&\fBOSSL_CMP_ITAV_new_caCerts()\fR, \fBOSSL_CMP_ITAV_get0_caCerts()\fR,
\&\fBOSSL_CMP_ITAV_new_rootCaCert()\fR, \fBOSSL_CMP_ITAV_get0_rootCaCert()\fR,
\&\fBOSSL_CMP_ITAV_new_rootCaKeyUpdate()\fR, and \fBOSSL_CMP_ITAV_get0_rootCaKeyUpdate()\fR
were added in OpenSSL 3.2.
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2022\-2024 The OpenSSL Project Authors. All Rights Reserved.
.PP
Licensed under the Apache License 2.0 (the "License").  You may not use
this file except in compliance with the License.  You can obtain a copy
in the file LICENSE in the source distribution or at
<https://www.openssl.org/source/license.html>.
